<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ImportLog extends \AppBundle\Entity\ImportLog implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'className', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'duration', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'dateStart', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'dateEnd', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbTotal', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbCreate', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbUpdate', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbUnchange', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbDelete', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbFail', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'errors'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'className', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'duration', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'dateStart', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'dateEnd', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbTotal', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbCreate', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbUpdate', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbUnchange', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbDelete', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'nbFail', '' . "\0" . 'AppBundle\\Entity\\ImportLog' . "\0" . 'errors'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ImportLog $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setClassName($className)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClassName', [$className]);

        return parent::setClassName($className);
    }

    /**
     * {@inheritDoc}
     */
    public function getClassName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClassName', []);

        return parent::getClassName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration($duration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', [$duration]);

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStart($dateStart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStart', [$dateStart]);

        return parent::setDateStart($dateStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStart', []);

        return parent::getDateStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnd($dateEnd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnd', [$dateEnd]);

        return parent::setDateEnd($dateEnd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnd', []);

        return parent::getDateEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbTotal($nbTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbTotal', [$nbTotal]);

        return parent::setNbTotal($nbTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbTotal', []);

        return parent::getNbTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbCreate($nbCreate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbCreate', [$nbCreate]);

        return parent::setNbCreate($nbCreate);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbCreate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbCreate', []);

        return parent::getNbCreate();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbUpdate($nbUpdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbUpdate', [$nbUpdate]);

        return parent::setNbUpdate($nbUpdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbUpdate', []);

        return parent::getNbUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbUnchange($nbUnchange)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbUnchange', [$nbUnchange]);

        return parent::setNbUnchange($nbUnchange);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbUnchange()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbUnchange', []);

        return parent::getNbUnchange();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbDelete($nbDelete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbDelete', [$nbDelete]);

        return parent::setNbDelete($nbDelete);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbDelete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbDelete', []);

        return parent::getNbDelete();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbFail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbFail', []);

        return parent::getNbFail();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbFail($nbFail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbFail', [$nbFail]);

        return parent::setNbFail($nbFail);
    }

    /**
     * {@inheritDoc}
     */
    public function getErrors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getErrors', []);

        return parent::getErrors();
    }

    /**
     * {@inheritDoc}
     */
    public function setErrors($errors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setErrors', [$errors]);

        return parent::setErrors($errors);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
