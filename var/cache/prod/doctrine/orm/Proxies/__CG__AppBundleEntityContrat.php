<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Contrat extends \AppBundle\Entity\Contrat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'nridContrat', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'officine', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'reference', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'modele', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateDebut', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateFin', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'montantTtc', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'numeroFacture', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateFacture', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'renvoiContrat', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'canal', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'urlContratASigner', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'statutCourant', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateStatut', 'deleted'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'nridContrat', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'officine', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'reference', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'modele', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateDebut', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateFin', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'montantTtc', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'numeroFacture', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateFacture', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'renvoiContrat', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'canal', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'urlContratASigner', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'statutCourant', '' . "\0" . 'AppBundle\\Entity\\Contrat' . "\0" . 'dateStatut', 'deleted'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Contrat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNridContrat($nridContrat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNridContrat', [$nridContrat]);

        return parent::setNridContrat($nridContrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getNridContrat()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getNridContrat();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNridContrat', []);

        return parent::getNridContrat();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setModele($modele)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModele', [$modele]);

        return parent::setModele($modele);
    }

    /**
     * {@inheritDoc}
     */
    public function getModele()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModele', []);

        return parent::getModele();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDebut($dateDebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDebut', [$dateDebut]);

        return parent::setDateDebut($dateDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDebut', []);

        return parent::getDateDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFin($dateFin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFin', [$dateFin]);

        return parent::setDateFin($dateFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFin', []);

        return parent::getDateFin();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontantTtc($montantTtc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontantTtc', [$montantTtc]);

        return parent::setMontantTtc($montantTtc);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontantTtc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontantTtc', []);

        return parent::getMontantTtc();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroFacture($numeroFacture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroFacture', [$numeroFacture]);

        return parent::setNumeroFacture($numeroFacture);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroFacture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroFacture', []);

        return parent::getNumeroFacture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFacture($dateFacture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFacture', [$dateFacture]);

        return parent::setDateFacture($dateFacture);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFacture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFacture', []);

        return parent::getDateFacture();
    }

    /**
     * {@inheritDoc}
     */
    public function setRenvoiContrat($renvoiContrat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRenvoiContrat', [$renvoiContrat]);

        return parent::setRenvoiContrat($renvoiContrat);
    }

    /**
     * {@inheritDoc}
     */
    public function getRenvoiContrat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRenvoiContrat', []);

        return parent::getRenvoiContrat();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanal($canal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanal', [$canal]);

        return parent::setCanal($canal);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanal', []);

        return parent::getCanal();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrlContratASigner($urlContratASigner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrlContratASigner', [$urlContratASigner]);

        return parent::setUrlContratASigner($urlContratASigner);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrlContratASigner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrlContratASigner', []);

        return parent::getUrlContratASigner();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatutCourant($statutCourant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatutCourant', [$statutCourant]);

        return parent::setStatutCourant($statutCourant);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatutCourant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatutCourant', []);

        return parent::getStatutCourant();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStatut($dateStatut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStatut', [$dateStatut]);

        return parent::setDateStatut($dateStatut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStatut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStatut', []);

        return parent::getDateStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficine(\AppBundle\Entity\Officine $officine)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficine', [$officine]);

        return parent::setOfficine($officine);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficine', []);

        return parent::getOfficine();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

}
