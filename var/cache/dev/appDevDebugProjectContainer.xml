<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/var/www/html/bio/app</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/var/www/html/bio/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/html/bio/var/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="LexikMaintenanceBundle">Lexik\Bundle\MaintenanceBundle\LexikMaintenanceBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</parameter>
      <parameter key="SonataClassificationBundle">Sonata\ClassificationBundle\SonataClassificationBundle</parameter>
      <parameter key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="ShapecodeCronBundle">Shapecode\Bundle\CronBundle\ShapecodeCronBundle</parameter>
      <parameter key="AppBundle">AppBundle\AppBundle</parameter>
      <parameter key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</parameter>
      <parameter key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</parameter>
      <parameter key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</parameter>
      <parameter key="RedCodeTreeBundle">RedCode\TreeBundle\RedCodeTreeBundle</parameter>
      <parameter key="GuzzleBundle">EightPoints\Bundle\GuzzleBundle\GuzzleBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</parameter>
      <parameter key="EWZRecaptchaBundle">EWZ\Bundle\RecaptchaBundle\EWZRecaptchaBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
      <parameter key="HautelookAliceBundle">Hautelook\AliceBundle\HautelookAliceBundle</parameter>
      <parameter key="LiipFunctionalTestBundle">Liip\FunctionalTestBundle\LiipFunctionalTestBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sensio/framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/stof/doctrine-extensions-bundle</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="LexikMaintenanceBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/lexik/maintenance-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\MaintenanceBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/jms/serializer-bundle/JMS/SerializerBundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/knplabs/knp-menu-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="SonataCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/core-bundle</parameter>
        <parameter key="namespace">Sonata\CoreBundle</parameter>
      </parameter>
      <parameter key="SonataBlockBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/block-bundle</parameter>
        <parameter key="namespace">Sonata\BlockBundle</parameter>
      </parameter>
      <parameter key="SonataDoctrineORMAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/doctrine-orm-admin-bundle</parameter>
        <parameter key="namespace">Sonata\DoctrineORMAdminBundle</parameter>
      </parameter>
      <parameter key="SonataAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/admin-bundle</parameter>
        <parameter key="namespace">Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="SonataIntlBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/intl-bundle</parameter>
        <parameter key="namespace">Sonata\IntlBundle</parameter>
      </parameter>
      <parameter key="SonataClassificationBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/classification-bundle</parameter>
        <parameter key="namespace">Sonata\ClassificationBundle</parameter>
      </parameter>
      <parameter key="SonataMediaBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/media-bundle</parameter>
        <parameter key="namespace">Sonata\MediaBundle</parameter>
      </parameter>
      <parameter key="SonataEasyExtendsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/easy-extends-bundle</parameter>
        <parameter key="namespace">Sonata\EasyExtendsBundle</parameter>
      </parameter>
      <parameter key="FOSUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/friendsofsymfony/user-bundle</parameter>
        <parameter key="namespace">FOS\UserBundle</parameter>
      </parameter>
      <parameter key="ShapecodeCronBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/shapecode/cron-bundle/src</parameter>
        <parameter key="namespace">Shapecode\Bundle\CronBundle</parameter>
      </parameter>
      <parameter key="AppBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/src/AppBundle</parameter>
        <parameter key="namespace">AppBundle</parameter>
      </parameter>
      <parameter key="KnpMarkdownBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/knplabs/knp-markdown-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\MarkdownBundle</parameter>
      </parameter>
      <parameter key="IvoryCKEditorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/egeloen/ckeditor-bundle</parameter>
        <parameter key="namespace">Ivory\CKEditorBundle</parameter>
      </parameter>
      <parameter key="SonataFormatterBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sonata-project/formatter-bundle</parameter>
        <parameter key="namespace">Sonata\FormatterBundle</parameter>
      </parameter>
      <parameter key="RedCodeTreeBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/redcode/tree-bundle/RedCode/TreeBundle</parameter>
        <parameter key="namespace">RedCode\TreeBundle</parameter>
      </parameter>
      <parameter key="GuzzleBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/eightpoints/guzzle-bundle/EightPoints/Bundle/GuzzleBundle</parameter>
        <parameter key="namespace">EightPoints\Bundle\GuzzleBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/friendsofsymfony/rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="NelmioApiDocBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle</parameter>
        <parameter key="namespace">Nelmio\ApiDocBundle</parameter>
      </parameter>
      <parameter key="EWZRecaptchaBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src</parameter>
        <parameter key="namespace">EWZ\Bundle\RecaptchaBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SensioDistributionBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sensio/distribution-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\DistributionBundle</parameter>
      </parameter>
      <parameter key="SensioGeneratorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/sensio/generator-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\GeneratorBundle</parameter>
      </parameter>
      <parameter key="HautelookAliceBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/hautelook/alice-bundle/src</parameter>
        <parameter key="namespace">Hautelook\AliceBundle</parameter>
      </parameter>
      <parameter key="LiipFunctionalTestBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">/var/www/html/bio/vendor/liip/functional-test-bundle</parameter>
        <parameter key="namespace">Liip\FunctionalTestBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">3306</parameter>
    <parameter key="database_name">biowebpro</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">1Jbgub18</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="rdi_send_mail">dev@groupe361.com</parameter>
    <parameter key="import_dir">/var/www/html/bio/app/../var/import</parameter>
    <parameter key="app" type="collection">
      <parameter key="scli_number">0 811 907 917</parameter>
      <parameter key="youtube_homepage">https://www.youtube.com/watch?v=G9WMPsyEXqs</parameter>
    </parameter>
    <parameter key="app_mail_adresses" type="collection">
      <parameter key="from_email" type="collection">
        <parameter key="noreply">noreply@proconnect.com</parameter>
      </parameter>
      <parameter key="to_email" type="collection">
        <parameter key="contact" type="collection">
          <parameter key="test@proconnect.com">Biogaran Pro Connect</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="import" type="collection">
      <parameter key="officines-pharmaciens" type="collection">
        <parameter key="officines" type="collection">
          <parameter key="type">csv</parameter>
          <parameter key="mode">DIFF_WITHOUT_DELETE</parameter>
          <parameter key="batchSize">100</parameter>
          <parameter key="entity">AppBundle\Entity\Officine</parameter>
          <parameter key="filePattern">neo_sp_off_[0-9]{12}.csv</parameter>
          <parameter key="encoding">Windows-1252</parameter>
        </parameter>
        <parameter key="pharmaciens" type="collection">
          <parameter key="type">csv</parameter>
          <parameter key="mode">DIFF_WITHOUT_DELETE</parameter>
          <parameter key="batchSize">100</parameter>
          <parameter key="entity">AppBundle\Entity\Pharmacien</parameter>
          <parameter key="filePattern">neo_sp_int_[0-9]{12}.csv</parameter>
          <parameter key="encoding">Windows-1252</parameter>
        </parameter>
        <parameter key="officines-pharmaciens" type="collection">
          <parameter key="type">csv</parameter>
          <parameter key="mode">DIFF_WITHOUT_DELETE</parameter>
          <parameter key="batchSize">100</parameter>
          <parameter key="entity">AppBundle\Entity\OfficinePharmacien</parameter>
          <parameter key="filePattern">neo_sp_lpi_[0-9]{12}.csv</parameter>
          <parameter key="encoding">Windows-1252</parameter>
        </parameter>
      </parameter>
      <parameter key="contrats" type="collection">
        <parameter key="contrats" type="collection">
          <parameter key="type">csv</parameter>
          <parameter key="mode">DIFF_WITHOUT_DELETE</parameter>
          <parameter key="batchSize">100</parameter>
          <parameter key="entity">AppBundle\Entity\Contrat</parameter>
          <parameter key="filePattern">neo_sp_cnt_[0-9]{12}.csv</parameter>
          <parameter key="encoding">Windows-1252</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="rdi" type="collection">
      <parameter key="send_type" type="collection">
        <parameter>api</parameter>
        <parameter>mail</parameter>
      </parameter>
      <parameter key="main_handler">api</parameter>
      <parameter key="send_from">admin@proconnect.com</parameter>
      <parameter key="send_to">dev@groupe361.com</parameter>
    </parameter>
    <parameter key="locale">fr</parameter>
    <parameter key="shapecode_cron.target_entity_resolver.cron_job.class">Shapecode\Bundle\CronBundle\Entity\CronJob</parameter>
    <parameter key="shapecode_cron.target_entity_resolver.cron_job_result.class">Shapecode\Bundle\CronBundle\Entity\CronJobResult</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">fr</parameter>
    <parameter key="templating.helper.code.file_link_format">phpstorm://open?file=%f&amp;line=%l</parameter>
    <parameter key="debug.file_link_format">phpstorm://open?file=%f&amp;line=%l</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/html/bio/app/../var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/var/www/html/bio/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/html/bio/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/html/bio/var/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/var/www/html/bio/app/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/var/www/html/bio/var/cache/dev/serialization.php</parameter>
    <parameter key="serializer.mapping.cache.prefix"></parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_OFFICINE_OWNER" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_OFFICINE_OWNER_CERTIFY" type="collection">
        <parameter>ROLE_OFFICINE_OWNER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>SonataFormatterBundle:Form:formatter.html.twig</parameter>
      <parameter>SonataMediaBundle:Form:media_widgets.html.twig</parameter>
      <parameter>EWZRecaptchaBundle:Form:ewz_recaptcha_widget.html.twig</parameter>
    </parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.app_main_log" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>console</parameter>
          <parameter>import</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/var/www/html/bio/var/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/html/bio/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.locale.class">Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.logger.class">Stof\DoctrineExtensionsBundle\EventListener\LoggerListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.blame.class">Stof\DoctrineExtensionsBundle\EventListener\BlameListener</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.manager.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.mime_type_guesser.class">Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.default_file_info.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">fr</parameter>
    <parameter key="stof_doctrine_extensions.default_file_path">null</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">false</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.uploadable.validate_writable_directory">true</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="lexik_maintenance.listener.class">Lexik\Bundle\MaintenanceBundle\Listener\MaintenanceListener</parameter>
    <parameter key="lexik_maintenance.driver_factory.class">Lexik\Bundle\MaintenanceBundle\Drivers\DriverFactory</parameter>
    <parameter key="lexik_maintenance.driver.database.class">Lexik\Bundle\MaintenanceBundle\Drivers\DatabaseDriver</parameter>
    <parameter key="lexik_maintenance.driver" type="collection">
      <parameter key="class">\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver</parameter>
      <parameter key="options" type="collection">
        <parameter key="file_path">/var/www/html/bio/app/cache/lock</parameter>
      </parameter>
      <parameter key="ttl">null</parameter>
    </parameter>
    <parameter key="lexik_maintenance.authorized.path">null</parameter>
    <parameter key="lexik_maintenance.authorized.host">null</parameter>
    <parameter key="lexik_maintenance.authorized.ips">null</parameter>
    <parameter key="lexik_maintenance.authorized.query" type="collection"/>
    <parameter key="lexik_maintenance.authorized.cookie" type="collection"/>
    <parameter key="lexik_maintenance.authorized.route">null</parameter>
    <parameter key="lexik_maintenance.authorized.attributes" type="collection"/>
    <parameter key="lexik_maintenance.response.http_code">503</parameter>
    <parameter key="lexik_maintenance.response.http_status">Service Temporarily Unavailable</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.xml_serialization_visitor.format_output">true</parameter>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">FOS\RestBundle\Serializer\Normalizer\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.context_factory.serialization.class">JMS\Serializer\ContextFactory\DefaultSerializationContextFactory</parameter>
    <parameter key="jms_serializer.context_factory.deserialization.class">JMS\Serializer\ContextFactory\DefaultDeserializationContextFactory</parameter>
    <parameter key="jms_serializer.expression_evaluator.class">JMS\Serializer\Expression\ExpressionEvaluator</parameter>
    <parameter key="jms_serializer.expression_language.class">Symfony\Component\ExpressionLanguage\ExpressionLanguage</parameter>
    <parameter key="jms_serializer.expression_language.function_provider.class">JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider</parameter>
    <parameter key="jms_serializer.accessor_strategy.default.class">JMS\Serializer\Accessor\DefaultAccessorStrategy</parameter>
    <parameter key="jms_serializer.accessor_strategy.expression.class">JMS\Serializer\Accessor\ExpressionAccessorStrategy</parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">KnpMenuBundle::menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.core.form.mapping.type" type="collection"/>
    <parameter key="sonata.core.form.mapping.extension" type="collection"/>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>sonata.dashboard.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:list_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:list_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:list_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:list_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</parameter>
          <parameter key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:list_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:show_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</parameter>
          <parameter key="date">SonataIntlBundle:CRUD:show_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:show_time.html.twig</parameter>
          <parameter key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:show_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</parameter>
          <parameter key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</parameter>
          <parameter key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:show_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
      <parameter key="choice">select</parameter>
      <parameter key="boolean">select</parameter>
      <parameter key="text">text</parameter>
      <parameter key="textarea">textarea</parameter>
      <parameter key="html">textarea</parameter>
      <parameter key="email">email</parameter>
      <parameter key="string">text</parameter>
      <parameter key="smallint">text</parameter>
      <parameter key="bigint">text</parameter>
      <parameter key="integer">number</parameter>
      <parameter key="decimal">number</parameter>
      <parameter key="currency">number</parameter>
      <parameter key="percent">number</parameter>
      <parameter key="url">url</parameter>
      <parameter key="date">date</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="user_block">:Block:user_block.html.twig</parameter>
      <parameter key="layout">:Admin:layout_form.html.twig</parameter>
      <parameter key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</parameter>
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</parameter>
      <parameter key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
      <parameter key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</parameter>
      <parameter key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</parameter>
      <parameter key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</parameter>
      <parameter key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</parameter>
      <parameter key="button_create">SonataAdminBundle:Button:create_button.html.twig</parameter>
      <parameter key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</parameter>
      <parameter key="button_history">SonataAdminBundle:Button:history_button.html.twig</parameter>
      <parameter key="button_list">SonataAdminBundle:Button:list_button.html.twig</parameter>
      <parameter key="button_show">SonataAdminBundle:Button:show_button.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection">
      <parameter key="app.admin.group.media" type="collection">
        <parameter key="label">Media</parameter>
        <parameter key="icon">&lt;i class="fa fa-camera-retro"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">sonata.media.admin.media</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">true</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="app.admin.group.news" type="collection">
        <parameter key="label">News</parameter>
        <parameter key="icon">&lt;i class="fa fa-newspaper-o"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">admin.news</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">true</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="app.admin.group.faq" type="collection">
        <parameter key="label">Faq</parameter>
        <parameter key="icon">&lt;i class="fa fa-question-circle"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">admin.faq</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">true</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="app.admin.group.pharmacien" type="collection">
        <parameter key="label">Pharmacien</parameter>
        <parameter key="icon">&lt;i class="fa fa-universal-access"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">admin.pharmacien</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">true</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="settings" type="collection"/>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.sort_admins">false</parameter>
    <parameter key="sonata.admin.configuration.breadcrumbs" type="collection">
      <parameter key="child_admin_route">edit</parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection"/>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
      <parameter key="uses" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.configuration.show.mosaic.button">true</parameter>
    <parameter key="sonata.intl.locale_detector.request.class">Sonata\IntlBundle\Locale\RequestDetector</parameter>
    <parameter key="sonata.intl.locale_detector.session.class">Sonata\IntlBundle\Locale\SessionDetector</parameter>
    <parameter key="sonata.intl.templating.helper.locale.class">Sonata\IntlBundle\Templating\Helper\LocaleHelper</parameter>
    <parameter key="sonata.intl.templating.helper.number.class">Sonata\IntlBundle\Templating\Helper\NumberHelper</parameter>
    <parameter key="sonata.intl.templating.helper.datetime.class">Sonata\IntlBundle\Templating\Helper\DateTimeHelper</parameter>
    <parameter key="sonata.intl.timezone_detector.chain.class">Sonata\IntlBundle\Timezone\ChainTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.user.class">Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.locale.class">Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.twig.helper.locale.class">Sonata\IntlBundle\Twig\Extension\LocaleExtension</parameter>
    <parameter key="sonata.intl.twig.helper.number.class">Sonata\IntlBundle\Twig\Extension\NumberExtension</parameter>
    <parameter key="sonata.intl.twig.helper.datetime.class">Sonata\IntlBundle\Twig\Extension\DateTimeExtension</parameter>
    <parameter key="sonata_intl.timezone.detectors" type="collection">
      <parameter>sonata.intl.timezone_detector.locale</parameter>
    </parameter>
    <parameter key="sonata.classification.manager.category.class">Sonata\ClassificationBundle\Entity\CategoryManager</parameter>
    <parameter key="sonata.classification.manager.tag.class">Sonata\ClassificationBundle\Entity\TagManager</parameter>
    <parameter key="sonata.classification.manager.collection.class">Sonata\ClassificationBundle\Entity\CollectionManager</parameter>
    <parameter key="sonata.classification.manager.context.class">Sonata\ClassificationBundle\Entity\ContextManager</parameter>
    <parameter key="sonata.classification.admin.groupname">sonata_classification</parameter>
    <parameter key="sonata.classification.admin.groupicon">&lt;i class='fa fa-tags'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.classification.admin.tag.entity">AppBundle\Entity\Classification\Tag</parameter>
    <parameter key="sonata.classification.admin.category.entity">AppBundle\Entity\Classification\Category</parameter>
    <parameter key="sonata.classification.admin.collection.entity">AppBundle\Entity\Classification\Collection</parameter>
    <parameter key="sonata.classification.admin.context.entity">AppBundle\Entity\Classification\Context</parameter>
    <parameter key="sonata.classification.manager.tag.entity">AppBundle\Entity\Classification\Tag</parameter>
    <parameter key="sonata.classification.manager.category.entity">AppBundle\Entity\Classification\Category</parameter>
    <parameter key="sonata.classification.manager.collection.entity">AppBundle\Entity\Classification\Collection</parameter>
    <parameter key="sonata.classification.manager.context.entity">AppBundle\Entity\Classification\Context</parameter>
    <parameter key="sonata.classification.admin.category.class">Sonata\ClassificationBundle\Admin\CategoryAdmin</parameter>
    <parameter key="sonata.classification.admin.category.controller">SonataClassificationBundle:CategoryAdmin</parameter>
    <parameter key="sonata.classification.admin.category.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.tag.class">Sonata\ClassificationBundle\Admin\TagAdmin</parameter>
    <parameter key="sonata.classification.admin.tag.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.tag.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.collection.class">Sonata\ClassificationBundle\Admin\CollectionAdmin</parameter>
    <parameter key="sonata.classification.admin.collection.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.collection.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.context.class">Sonata\ClassificationBundle\Admin\ContextAdmin</parameter>
    <parameter key="sonata.classification.admin.context.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.context.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.media.provider.image.class">Sonata\MediaBundle\Provider\ImageProvider</parameter>
    <parameter key="sonata.media.provider.file.class">Sonata\MediaBundle\Provider\FileProvider</parameter>
    <parameter key="sonata.media.provider.youtube.class">Sonata\MediaBundle\Provider\YouTubeProvider</parameter>
    <parameter key="sonata.media.provider.dailymotion.class">Sonata\MediaBundle\Provider\DailyMotionProvider</parameter>
    <parameter key="sonata.media.provider.vimeo.class">Sonata\MediaBundle\Provider\VimeoProvider</parameter>
    <parameter key="sonata.media.thumbnail.format">Sonata\MediaBundle\Thumbnail\FormatThumbnail</parameter>
    <parameter key="sonata.media.thumbnail.format.default">jpg</parameter>
    <parameter key="sonata.media.thumbnail.liip_imagine">Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail</parameter>
    <parameter key="sonata.media.pool.class">Sonata\MediaBundle\Provider\Pool</parameter>
    <parameter key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Resizer\SimpleResizer</parameter>
    <parameter key="sonata.media.resizer.square.class">Sonata\MediaBundle\Resizer\SquareResizer</parameter>
    <parameter key="sonata.media.adapter.image.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="sonata.media.metadata.proxy.class">Sonata\MediaBundle\Metadata\ProxyMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.amazon.class">Sonata\MediaBundle\Metadata\AmazonMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.noop.class">Sonata\MediaBundle\Metadata\NoopMetadataBuilder</parameter>
    <parameter key="sonata.media.adapater.filesystem.opencloud.class"></parameter>
    <parameter key="sonata.media.block.media.class">Sonata\MediaBundle\Block\MediaBlockService</parameter>
    <parameter key="sonata.media.block.feature_media.class">Sonata\MediaBundle\Block\FeatureMediaBlockService</parameter>
    <parameter key="sonata.media.block.gallery.class">Sonata\MediaBundle\Block\GalleryBlockService</parameter>
    <parameter key="sonata.media.block.gallery_list.class">Sonata\MediaBundle\Block\GalleryListBlockService</parameter>
    <parameter key="sonata.media.manager.media.class">Sonata\MediaBundle\Entity\MediaManager</parameter>
    <parameter key="sonata.media.manager.gallery.class">Sonata\MediaBundle\Entity\GalleryManager</parameter>
    <parameter key="sonata.media.admin.groupname">sonata_media</parameter>
    <parameter key="sonata.media.admin.groupicon">&lt;i class='fa fa-image'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.media.admin.media.class">Sonata\MediaBundle\Admin\ORM\MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.controller">SonataMediaBundle:MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery.class">Sonata\MediaBundle\Admin\GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.controller">SonataMediaBundle:GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.class">Sonata\MediaBundle\Admin\GalleryHasMediaAdmin</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin_format" type="collection">
      <parameter key="width">200</parameter>
      <parameter key="height">false</parameter>
      <parameter key="quality">90</parameter>
      <parameter key="format">jpg</parameter>
      <parameter key="constraint">true</parameter>
    </parameter>
    <parameter key="sonata.media.resizer.simple.adapter.mode">inset</parameter>
    <parameter key="sonata.media.resizer.square.adapter.mode">inset</parameter>
    <parameter key="sonata.media.admin.media.entity">AppBundle\Entity\Media\Media</parameter>
    <parameter key="sonata.media.admin.gallery.entity">AppBundle\Entity\Media\Gallery</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.entity">AppBundle\Entity\Media\GalleryHasMedia</parameter>
    <parameter key="sonata.media.media.class">AppBundle\Entity\Media\Media</parameter>
    <parameter key="sonata.media.gallery.class">AppBundle\Entity\Media\Gallery</parameter>
    <parameter key="fos_user.backend_type_orm">true</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">@FOSUser/Email/resetting_email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">@FOSUser/Registration/email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">AppBundle\Entity\User</parameter>
    <parameter key="fos_user.profile.form.type">FOS\UserBundle\Form\Type\ProfileFormType</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="noreply@proconnect.com">Biogaran Pro Connect</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">false</parameter>
    <parameter key="fos_user.registration.form.type">AppBundle\Form\RegistrationType</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>AppRegistration</parameter>
    </parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.change_password.form.type">FOS\UserBundle\Form\Type\ChangePasswordFormType</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="noreply@proconnect.com">Biogaran Pro Connect</parameter>
    </parameter>
    <parameter key="fos_user.resetting.retry_ttl">false</parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>AppResetting</parameter>
    </parameter>
    <parameter key="fos_user.resetting.form.type">FOS\UserBundle\Form\Type\ResettingFormType</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="templating.helper.markdown.class">Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper</parameter>
    <parameter key="sonata.formatter.text.markdown.class">Sonata\FormatterBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="sonata.formatter.text.text.class">Sonata\FormatterBundle\Formatter\TextFormatter</parameter>
    <parameter key="sonata.formatter.text.raw.class">Sonata\FormatterBundle\Formatter\RawFormatter</parameter>
    <parameter key="sonata.formatter.text.twigengine.class">Sonata\FormatterBundle\Formatter\TwigFormatter</parameter>
    <parameter key="sonata.formatter.block.formatter.class">Sonata\FormatterBundle\Block\FormatterBlockService</parameter>
    <parameter key="sonata.formatter.ckeditor.extension.class">Sonata\FormatterBundle\Admin\CkeditorAdminExtension</parameter>
    <parameter key="sonata.formatter.ckeditor.configuration.templates" type="collection">
      <parameter key="browser">SonataFormatterBundle:Ckeditor:browser.html.twig</parameter>
      <parameter key="upload">SonataFormatterBundle:Ckeditor:upload.html.twig</parameter>
    </parameter>
    <parameter key="guzzle.http_client.class">GuzzleHttp\Client</parameter>
    <parameter key="guzzle.middleware.class">GuzzleHttp\Middleware</parameter>
    <parameter key="guzzle.formatter.class">GuzzleHttp\MessageFormatter</parameter>
    <parameter key="guzzle_bundle.data_collector.class">EightPoints\Bundle\GuzzleBundle\DataCollector\HttpDataCollector</parameter>
    <parameter key="guzzle_bundle.logger.class">EightPoints\Bundle\GuzzleBundle\Log\Logger</parameter>
    <parameter key="guzzle_bundle.middleware.log.class">EightPoints\Bundle\GuzzleBundle\Middleware\LogMiddleware</parameter>
    <parameter key="guzzle_bundle.middleware.event_dispatcher.class">EightPoints\Bundle\GuzzleBundle\Middleware\EventDispatchMiddleware</parameter>
    <parameter key="guzzle.plugin.header.headers" type="collection"/>
    <parameter key="guzzle_bundle.middleware.wsse.class">EightPoints\Guzzle\WsseAuthMiddleware</parameter>
    <parameter key="guzzle.plugin.wsse.username"></parameter>
    <parameter key="guzzle.plugin.wsse.password"></parameter>
    <parameter key="fos_rest.format_listener.rules">null</parameter>
    <parameter key="nelmio_api_doc.motd.template">NelmioApiDocBundle::Components/motd.html.twig</parameter>
    <parameter key="nelmio_api_doc.exclude_sections" type="collection"/>
    <parameter key="nelmio_api_doc.default_sections_opened">true</parameter>
    <parameter key="nelmio_api_doc.api_name">Biogaran Pro API Documentation</parameter>
    <parameter key="nelmio_api_doc.sandbox.enabled">true</parameter>
    <parameter key="nelmio_api_doc.sandbox.endpoint">null</parameter>
    <parameter key="nelmio_api_doc.sandbox.accept_type">application/json</parameter>
    <parameter key="nelmio_api_doc.sandbox.body_format.formats" type="collection"/>
    <parameter key="nelmio_api_doc.sandbox.body_format.default_format">json</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.method">accept_header</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.default_format">json</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.formats" type="collection"/>
    <parameter key="nelmio_api_doc.sandbox.entity_to_choice">true</parameter>
    <parameter key="nelmio_api_doc.formatter.abstract_formatter.class">Nelmio\ApiDocBundle\Formatter\AbstractFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.markdown_formatter.class">Nelmio\ApiDocBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.simple_formatter.class">Nelmio\ApiDocBundle\Formatter\SimpleFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.html_formatter.class">Nelmio\ApiDocBundle\Formatter\HtmlFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.swagger_formatter.class">Nelmio\ApiDocBundle\Formatter\SwaggerFormatter</parameter>
    <parameter key="nelmio_api_doc.sandbox.authentication">null</parameter>
    <parameter key="nelmio_api_doc.extractor.api_doc_extractor.class">Nelmio\ApiDocBundle\Extractor\ApiDocExtractor</parameter>
    <parameter key="nelmio_api_doc.form.extension.description_form_type_extension.class">Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension</parameter>
    <parameter key="nelmio_api_doc.twig.extension.extra_markdown.class">Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension</parameter>
    <parameter key="nelmio_api_doc.doc_comment_extractor.class">Nelmio\ApiDocBundle\Util\DocCommentExtractor</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.fos_rest.class">Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.jms_security.class">Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.sensio_framework_extra.class">Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.phpdoc.class">Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler</parameter>
    <parameter key="nelmio_api_doc.parser.collection_parser.class">Nelmio\ApiDocBundle\Parser\CollectionParser</parameter>
    <parameter key="nelmio_api_doc.parser.form_errors_parser.class">Nelmio\ApiDocBundle\Parser\FormErrorsParser</parameter>
    <parameter key="nelmio_api_doc.parser.json_serializable_parser.class">Nelmio\ApiDocBundle\Parser\JsonSerializableParser</parameter>
    <parameter key="nelmio_api_doc.request_listener.parameter">_doc</parameter>
    <parameter key="nelmio_api_doc.event_listener.request.class">Nelmio\ApiDocBundle\EventListener\RequestListener</parameter>
    <parameter key="nelmio_api_doc.parser.validation_parser.class">Nelmio\ApiDocBundle\Parser\ValidationParser</parameter>
    <parameter key="nelmio_api_doc.swagger.base_path">/api</parameter>
    <parameter key="nelmio_api_doc.swagger.swagger_version">1.2</parameter>
    <parameter key="nelmio_api_doc.swagger.api_version">0.1</parameter>
    <parameter key="nelmio_api_doc.swagger.info" type="collection">
      <parameter key="title">Symfony2</parameter>
      <parameter key="description">My awesome Symfony2 app!</parameter>
      <parameter key="TermsOfServiceUrl">null</parameter>
      <parameter key="contact">null</parameter>
      <parameter key="license">null</parameter>
      <parameter key="licenseUrl">null</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.swagger.model_naming_strategy">dot_notation</parameter>
    <parameter key="ewz_recaptcha.public_key">6LdnMxgUAAAAAHjG60oxrfd9K2Y61w3DrZ994LPV</parameter>
    <parameter key="ewz_recaptcha.private_key">6LdnMxgUAAAAAPL-nDs2NmwRQAyJe0mofm9wG_ER</parameter>
    <parameter key="ewz_recaptcha.enabled">true</parameter>
    <parameter key="ewz_recaptcha.verify_host">false</parameter>
    <parameter key="ewz_recaptcha.ajax">false</parameter>
    <parameter key="ewz_recaptcha.locale_key">fr</parameter>
    <parameter key="ewz_recaptcha.locale_from_request">false</parameter>
    <parameter key="ewz_recaptcha.http_proxy" type="collection">
      <parameter key="host">null</parameter>
      <parameter key="port">null</parameter>
      <parameter key="auth">null</parameter>
    </parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="hautelook_alice.locale">fr_FR</parameter>
    <parameter key="hautelook_alice.loading_limit">10</parameter>
    <parameter key="hautelook_alice.db_drivers" type="collection">
      <parameter key="orm">null</parameter>
      <parameter key="mongodb">null</parameter>
      <parameter key="phpcr">null</parameter>
    </parameter>
    <parameter key="hautelook_alice.seed">1</parameter>
    <parameter key="hautelook_alice.persist_once">false</parameter>
    <parameter key="liip_functional_test.cache_sqlite_db">false</parameter>
    <parameter key="liip_functional_test.command_verbosity">normal</parameter>
    <parameter key="liip_functional_test.command_decoration">true</parameter>
    <parameter key="liip_functional_test.query.max_query_count">null</parameter>
    <parameter key="liip_functional_test.authentication.username"></parameter>
    <parameter key="liip_functional_test.authentication.password"></parameter>
    <parameter key="liip_functional_test.html5validation.url">https://validator.nu/</parameter>
    <parameter key="liip_functional_test.html5validation.ignores" type="collection"/>
    <parameter key="liip_functional_test.html5validation.ignores_extract" type="collection"/>
    <parameter key="liip_functional_test.paratest.process">5</parameter>
    <parameter key="liip_functional_test.paratest.phpunit">./bin/phpunit</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>SonataBlockBundle:Profiler:block.html.twig</parameter>
      </parameter>
      <parameter key="guzzle_bundle.data_collector" type="collection">
        <parameter>guzzle</parameter>
        <parameter>GuzzleBundle::debug</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>sensio_distribution.security_checker.command</parameter>
      <parameter>hautelook_alice.doctrine.command.deprecated_load_command</parameter>
      <parameter>hautelook_alice.doctrine.command.load_command</parameter>
    </parameter>
    <parameter key="sonata.core.form.types" type="collection">
      <parameter>app.form.registration</parameter>
      <parameter>app.form.resetting</parameter>
      <parameter>form.type.form</parameter>
      <parameter>form.type.choice</parameter>
      <parameter>form.type.entity</parameter>
      <parameter>sonata.core.form.type.array</parameter>
      <parameter>sonata.core.form.type.boolean</parameter>
      <parameter>sonata.core.form.type.collection</parameter>
      <parameter>sonata.core.form.type.translatable_choice</parameter>
      <parameter>sonata.core.form.type.date_range</parameter>
      <parameter>sonata.core.form.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.date_picker</parameter>
      <parameter>sonata.core.form.type.datetime_picker</parameter>
      <parameter>sonata.core.form.type.date_range_picker</parameter>
      <parameter>sonata.core.form.type.datetime_range_picker</parameter>
      <parameter>sonata.core.form.type.equal</parameter>
      <parameter>sonata.core.form.type.color_selector</parameter>
      <parameter>sonata.block.form.type.block</parameter>
      <parameter>sonata.block.form.type.container_template</parameter>
      <parameter>sonata.admin.form.type.admin</parameter>
      <parameter>sonata.admin.form.type.model_choice</parameter>
      <parameter>sonata.admin.form.type.model_list</parameter>
      <parameter>sonata.admin.form.type.model_reference</parameter>
      <parameter>sonata.admin.form.type.model_hidden</parameter>
      <parameter>sonata.admin.form.type.model_autocomplete</parameter>
      <parameter>sonata.admin.form.type.collection</parameter>
      <parameter>sonata.admin.doctrine_orm.form.type.choice_field_mask</parameter>
      <parameter>sonata.admin.form.filter.type.number</parameter>
      <parameter>sonata.admin.form.filter.type.choice</parameter>
      <parameter>sonata.admin.form.filter.type.default</parameter>
      <parameter>sonata.admin.form.filter.type.date</parameter>
      <parameter>sonata.admin.form.filter.type.daterange</parameter>
      <parameter>sonata.admin.form.filter.type.datetime</parameter>
      <parameter>sonata.admin.form.filter.type.datetime_range</parameter>
      <parameter>sonata.classification.form.type.category_selector</parameter>
      <parameter>sonata.classification.api.form.type.category</parameter>
      <parameter>sonata.classification.api.form.type.collection</parameter>
      <parameter>sonata.classification.api.form.type.tag</parameter>
      <parameter>sonata.classification.api.form.type.context</parameter>
      <parameter>sonata.media.form.type.media</parameter>
      <parameter>sonata.media.api.form.type.doctrine.media</parameter>
      <parameter>sonata.media.api.form.type.media</parameter>
      <parameter>sonata.media.api.form.type.gallery</parameter>
      <parameter>sonata.media.api.form.type.gallery_has_media</parameter>
      <parameter>fos_user.username_form_type</parameter>
      <parameter>fos_user.profile.form.type</parameter>
      <parameter>fos_user.registration.form.type</parameter>
      <parameter>fos_user.change_password.form.type</parameter>
      <parameter>fos_user.resetting.form.type</parameter>
      <parameter>ivory_ck_editor.form.type</parameter>
      <parameter>sonata.formatter.form.type.selector</parameter>
      <parameter>sonata.formatter.form.type.simple</parameter>
      <parameter>ewz_recaptcha.form.type</parameter>
    </parameter>
    <parameter key="sonata.core.form.type_extensions" type="collection">
      <parameter>form.type_extension.form.http_foundation</parameter>
      <parameter>form.type_extension.form.validator</parameter>
      <parameter>form.type_extension.repeated.validator</parameter>
      <parameter>form.type_extension.submit.validator</parameter>
      <parameter>form.type_extension.upload.validator</parameter>
      <parameter>form.type_extension.csrf</parameter>
      <parameter>form.type_extension.form.data_collector</parameter>
      <parameter>sonata.admin.form.extension.field</parameter>
      <parameter>sonata.admin.form.extension.field.mopa</parameter>
      <parameter>sonata.admin.form.extension.choice</parameter>
      <parameter>nelmio_api_doc.form.extension.description_form_type_extension</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.parser.form_type_parser.class">Nelmio\ApiDocBundle\Parser\FormTypeParser</parameter>
    <parameter key="nelmio_api_doc.parser.jms_metadata_parser.class">Nelmio\ApiDocBundle\Parser\JmsMetadataParser</parameter>
  </parameters>
  <services>
    <service id="app.import_manager" class="AppBundle\Import\ImportManager">
      <argument type="service" id="app.manager_locator"/>
      <argument type="service" id="monolog.logger.import"/>
      <argument type="service" id="app.manager.import_log"/>
      <call method="addImportHandler">
        <argument type="service" id="app.import_csv_handler"/>
        <argument>csv</argument>
      </call>
    </service>
    <service id="app.import_csv_handler" class="AppBundle\Import\ImportCsvHandler">
      <tag name="app.import_handler" handler_type="csv"/>
      <argument type="service" id="app.csv_encoder"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="officine_serializer_handler" class="AppBundle\Import\Serializer\OfficineSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="pharmacien_serializer_handler" class="AppBundle\Import\Serializer\PharmacienSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="app.manager_locator" class="AppBundle\Service\ManagerLocator">
      <call method="addManager">
        <argument type="service" id="app.manager.pharmacien"/>
        <argument>AppBundle\Entity\Pharmacien</argument>
      </call>
      <call method="addManager">
        <argument type="service" id="app.manager.officine"/>
        <argument>AppBundle\Entity\Officine</argument>
      </call>
      <call method="addManager">
        <argument type="service" id="app.manager.officine_pharmacien"/>
        <argument>AppBundle\Entity\OfficinePharmacien</argument>
      </call>
      <call method="addManager">
        <argument type="service" id="app.manager.import_log"/>
        <argument>AppBundle\Entity\ImportLog</argument>
      </call>
      <call method="addManager">
        <argument type="service" id="app.manager.rdi"/>
        <argument>AppBundle\Entity\Rdi</argument>
      </call>
      <call method="addManager">
        <argument type="service" id="app.manager.news"/>
        <argument>AppBundle\Entity\News</argument>
      </call>
      <call method="addManager">
        <argument type="service" id="app.manager.contrat"/>
        <argument>AppBundle\Entity\Contrat</argument>
      </call>
    </service>
    <service id="app.manager_tools" class="AppBundle\Service\ManagerTools">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="app.result_factory"/>
      <argument type="service" id="liip_functional_test.validator"/>
      <argument type="service" id="monolog.logger.doctrine"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="app.manager.user" class="AppBundle\Manager\UserManager">
      <argument type="service" id="app.user.password_helper"/>
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service">
        <service class="Doctrine\Common\Persistence\ObjectManager" public="false">
          <argument>null</argument>
          <factory service="doctrine" method="getManager"/>
        </service>
      </argument>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="app.manager.pharmacien" class="AppBundle\Manager\PharmacienManager">
      <tag name="app.manager"/>
      <argument>AppBundle\Entity\Pharmacien</argument>
      <argument type="service" id="app.manager_tools"/>
    </service>
    <service id="app.manager.officine" class="AppBundle\Manager\OfficineManager">
      <tag name="app.manager"/>
      <argument>AppBundle\Entity\Officine</argument>
      <argument type="service" id="app.manager_tools"/>
    </service>
    <service id="app.manager.officine_pharmacien" class="AppBundle\Manager\OfficinePharmacienManager">
      <tag name="app.manager"/>
      <argument>AppBundle\Entity\OfficinePharmacien</argument>
      <argument type="service" id="app.manager_tools"/>
    </service>
    <service id="app.manager.import_log" class="AppBundle\Manager\ImportLogManager">
      <tag name="app.manager"/>
      <argument>AppBundle\Entity\ImportLog</argument>
      <argument type="service" id="app.manager_tools"/>
    </service>
    <service id="app.manager.rdi" class="AppBundle\Manager\RdiManager">
      <tag name="app.manager"/>
      <argument>AppBundle\Entity\Rdi</argument>
      <argument type="service" id="app.manager_tools"/>
      <argument type="collection">
        <argument key="send_type" type="collection">
          <argument>api</argument>
          <argument>mail</argument>
        </argument>
        <argument key="main_handler">api</argument>
        <argument key="send_from">admin@proconnect.com</argument>
        <argument key="send_to">dev@groupe361.com</argument>
      </argument>
      <argument type="service" id="twig"/>
      <call method="addRdiHandler">
        <argument type="service" id="app.rdi_mail_handler"/>
        <argument>mail</argument>
      </call>
      <call method="addRdiHandler">
        <argument type="service" id="app.rdi_api_handler"/>
        <argument>api</argument>
      </call>
    </service>
    <service id="app.manager.news" class="AppBundle\Manager\NewsManager">
      <tag name="app.manager"/>
      <argument>AppBundle\Entity\News</argument>
      <argument type="service" id="app.manager_tools"/>
    </service>
    <service id="app.manager.contrat" class="AppBundle\Manager\ContratManager">
      <tag name="app.manager"/>
      <argument>AppBundle\Entity\Contrat</argument>
      <argument type="service" id="app.manager_tools"/>
    </service>
    <service id="admin.category" class="AppBundle\Admin\CategoryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="Category"/>
      <argument>admin.category</argument>
      <argument>AppBundle\Entity\Category</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Category</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.news" class="AppBundle\Admin\NewsAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="News"/>
      <argument>admin.news</argument>
      <argument>AppBundle\Entity\News</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>News</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.faq" class="AppBundle\Admin\FaqAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="Faq"/>
      <argument>admin.faq</argument>
      <argument>AppBundle\Entity\Faq</argument>
      <argument>AppBundle:Admin\FaqAdmin</argument>
      <argument>title</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Faq</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="admin.pharmacien" class="AppBundle\Admin\PharmacienAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="Pharmacien"/>
      <argument>admin.pharmacien</argument>
      <argument>AppBundle\Entity\Pharmacien</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Pharmacien</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="app.twig_extension.officine_selector" class="AppBundle\Twig\OfficineSelectorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="app.officine_selector"/>
    </service>
    <service id="app.csv_encoder" class="AppBundle\Import\CustomCsvEncoder">
      <tag name="serializer.encoder" public=""/>
    </service>
    <service id="app.success_handler" class="AppBundle\Security\SuccessHandler">
      <argument type="service" id="router"/>
      <argument type="service" id="app.officine_selector"/>
      <argument type="service" id="app.manager.user"/>
    </service>
    <service id="app.form.registration" class="AppBundle\Form\RegistrationType">
      <tag name="form.type" alias="app_user_registration"/>
    </service>
    <service id="app.form.resetting" class="AppBundle\Form\RegistrationType">
      <tag name="form.type" alias="app_resetting_form"/>
    </service>
    <service id="app.user.listener" class="AppBundle\EventListener\UserCreationListener">
      <tag name="kernel.event_listener" event="fos_user.registration.completed" method="onNewUser"/>
      <argument>ROLE_OFFICINE_OWNER</argument>
      <argument type="service" id="app.manager.user"/>
      <argument type="service" id="app.manager.rdi"/>
      <argument type="service" id="router"/>
      <argument type="service" id="session"/>
    </service>
    <service id="app.mail.listener" class="AppBundle\EventListener\MailListener">
      <tag name="kernel.event_listener" event="app.resetting.confirm" method="onUserPasswordResetted"/>
      <argument type="service" id="fos_user.mailer"/>
    </service>
    <service id="app.menu_builder" class="AppBundle\Menu\MenuBuilder">
      <tag name="knp_menu.menu_builder" method="createMainMenu" alias="main"/>
      <tag name="knp_menu.menu_builder" method="createPharmacienMenu" alias="nridInterlocuteur"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="app.rdi_mail_handler" class="AppBundle\Rdi\RdiMailHandler">
      <tag name="app.rdi_handler" handler_type="mail"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="collection">
        <argument key="send_type" type="collection">
          <argument>api</argument>
          <argument>mail</argument>
        </argument>
        <argument key="main_handler">api</argument>
        <argument key="send_from">admin@proconnect.com</argument>
        <argument key="send_to">dev@groupe361.com</argument>
      </argument>
    </service>
    <service id="app.rdi_api_handler" class="AppBundle\Rdi\RdiApiHandler">
      <tag name="app.rdi_handler" handler_type="api"/>
      <argument type="service" id="jms_serializer"/>
      <argument type="service" id="guzzle.client.api_biogaran_rdi"/>
    </service>
    <service id="app.result_factory" class="AppBundle\Service\ResultFactory"/>
    <service id="app.util.inflector.noop" class="AppBundle\Util\Inflector\NoopInflector"/>
    <service id="app.exception.api_listener" class="AppBundle\EventListener\ApiExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException"/>
    </service>
    <service id="app.api" class="AppBundle\Service\ApiService">
      <argument type="service" id="app.manager.pharmacien"/>
      <argument type="service" id="app.manager.user"/>
      <argument type="service" id="app.manager.rdi"/>
    </service>
    <service id="app.user.password_helper" class="AppBundle\Service\UserPasswordHelper">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.util.token_generator"/>
      <argument>false</argument>
    </service>
    <service id="app.officine_selector" class="AppBundle\Service\OfficineSelectorService">
      <argument type="service" id="app.manager.officine"/>
      <argument type="service" id="session"/>
    </service>
    <service id="app.mailer" class="AppBundle\Service\MailService">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="template" type="collection">
          <argument key="confirmation">@FOSUser/Registration/email.txt.twig</argument>
          <argument key="resetting">@FOSUser/Email/resetting_email.txt.twig</argument>
        </argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="noreply@proconnect.com">Biogaran Pro Connect</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="noreply@proconnect.com">Biogaran Pro Connect</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="from_email" type="collection">
          <argument key="noreply">noreply@proconnect.com</argument>
        </argument>
        <argument key="to_email" type="collection">
          <argument key="contact" type="collection">
            <argument key="test@proconnect.com">Biogaran Pro Connect</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>fr</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/html/bio/app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service" id="kernel.class_cache.cache_warmer"/>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="translator.default"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="validator.builder"/>
            <argument>/var/www/html/bio/var/cache/dev/validation.php</argument>
            <argument type="service">
              <service class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
                <tag name="cache.pool"/>
                <tag name="cache.pool" clearer="cache.default_clearer"/>
                <argument>tDLsVxzhMP</argument>
                <argument>0</argument>
                <argument>tmdZOBSsHZLLJZ7HRaXbkY</argument>
                <argument>/var/www/html/bio/var/cache/dev/pools</argument>
                <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
                <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="annotations.reader"/>
            <argument>/var/www/html/bio/var/cache/dev/annotations.php</argument>
            <argument type="service" id="cache.annotations"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="collection">
              <argument type="service">
                <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
                  <argument type="service" id="annotation_reader"/>
                </service>
              </argument>
            </argument>
            <argument>/var/www/html/bio/var/cache/dev/serialization.php</argument>
            <argument type="service" id="cache.serializer"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/var/www/html/bio/app/Resources</argument>
              </service>
            </argument>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="twig"/>
            <argument type="service">
              <service class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
                <argument type="service" id="kernel"/>
                <argument>/var/www/html/bio/app</argument>
                <argument type="collection"/>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
        <argument type="service" id="fos_rest.allowed_methods_loader"/>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument>Symfony\Component\HttpFoundation\ParameterBag</argument>
        <argument>Symfony\Component\HttpFoundation\HeaderBag</argument>
        <argument>Symfony\Component\HttpFoundation\FileBag</argument>
        <argument>Symfony\Component\HttpFoundation\ServerBag</argument>
        <argument>Symfony\Component\HttpFoundation\Request</argument>
        <argument>Symfony\Component\HttpKernel\Kernel</argument>
        <argument>Symfony\Component\ClassLoader\ClassCollectionLoader</argument>
        <argument>Symfony\Component\ClassLoader\ApcClassLoader</argument>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection">
        <argument type="service" id="cache.default_clearer"/>
      </argument>
    </service>
    <service id="service_container" synthetic="true">
      <autowiring-type>Symfony\Component\DependencyInjection\ContainerInterface</autowiring-type>
      <autowiring-type>Symfony\Component\DependencyInjection\Container</autowiring-type>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/var/www/html/bio/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
            <tag name="config_cache.resource_checker" priority="-990"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <call method="addRendererService">
        <argument>inline</argument>
        <argument>fragment.renderer.inline</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>esi</argument>
        <argument>fragment.renderer.esi</argument>
      </call>
      <call method="addRendererService">
        <argument>ssi</argument>
        <argument>fragment.renderer.ssi</argument>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
          <argument>0</argument>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument>c4JvVAtLcs</argument>
      <argument>0</argument>
      <argument>/var/www/html/bio/var/cache/dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument>GSXEjI2p55</argument>
      <argument>0</argument>
      <argument>tmdZOBSsHZLLJZ7HRaXbkY</argument>
      <argument>/var/www/html/bio/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument>d2J-WmQxG9</argument>
      <argument>0</argument>
      <argument>tmdZOBSsHZLLJZ7HRaXbkY</argument>
      <argument>/var/www/html/bio/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument>kvEvLlvTgt</argument>
      <argument>0</argument>
      <argument>tmdZOBSsHZLLJZ7HRaXbkY</argument>
      <argument>/var/www/html/bio/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="kernel.cache_clearer"/>
      <call method="addPool">
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addPool">
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addPool">
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addPool">
        <argument type="service" id="cache.annotations"/>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\Translation\MessageSelector" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/html/bio/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="ja" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ja.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ja.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ja.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.ja.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.ja.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ja.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ja.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.ja.xliff</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.it.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.it.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.it.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.it.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.it.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.it.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.it.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.it.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.it.xliff</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.no.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.no.xliff</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.bg.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.bg.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.bg.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.bg.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.bg.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.bg.yml</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.bg.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/var/www/html/bio/vendor/lexik/maintenance-bundle/Resources/translations/maintenance.en.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.en.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.en.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.en.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.en.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.en.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.en.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.en.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.en.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.en.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.th.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.th.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.th.yml</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fi.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.fi.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fi.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fi.yml</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.nl.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.nl.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.nl.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.nl.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.nl.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nl.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nl.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.nl.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.nl.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.id.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.id.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.id.yml</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.he.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.he.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.he.yml</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sl.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sl.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sl.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.sl.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sl.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sl.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sl.xliff</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ru.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ru.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ru.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.ru.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.ru.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ru.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ru.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.ru.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.ru.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.es.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.es.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.es.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.es.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.es.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.es.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.es.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.es.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.es.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.cs.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.cs.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.cs.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.cs.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.cs.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.cs.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.cs.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.uk.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.uk.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.uk.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.uk.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.uk.yml</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.uk.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.tr.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.tr.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.tr.yml</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.tr.xlf</argument>
          </argument>
          <argument key="af" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.af.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.el.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.el.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.el.yml</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nn.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.de.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.de.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.de.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.de.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.de.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.de.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.de.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.de.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.de.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.de.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hu.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hu.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.hu.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hu.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.hu.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.hu.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hu.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hu.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.hu.xliff</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fr.xlf</argument>
            <argument>/var/www/html/bio/vendor/lexik/maintenance-bundle/Resources/translations/maintenance.fr.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fr.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/translations/SonataBlockBundle.fr.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fr.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.fr.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.fr.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fr.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fr.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.fr.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.fr.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pl.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pl.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pl.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pl.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pl.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pl.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.pl.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.pl.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.vi.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.vi.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.vi.yml</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.eu.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.eu.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eu.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eu.yml</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ro.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ro.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ro.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.ro.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.ro.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ro.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ro.yml</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.ro.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sk.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.sk.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sk.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sk.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sk.yml</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/translations/SonataFormatterBundle.sk.xliff</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.sk.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ar.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ar.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ar.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ar.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ar.yml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lv.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lv.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lv.yml</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ca.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.ca.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.ca.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ca.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ca.yml</argument>
            <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/translations/validators.ca.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lb.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lb.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lb.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lb.yml</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sv.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sv.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sv.yml</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.zh_CN.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.zh_CN.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.zh_CN.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.zh_CN.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.zh_CN.yml</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.fa.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.fa.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.fa.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.fa.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.fa.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.fa.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.fa.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.hr.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.hr.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.hr.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.hr.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.hr.yml</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_BR.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.pt_BR.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.pt_BR.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/translations/SonataClassificationBundle.pt_BR.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.pt_BR.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.pt_BR.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.pt_BR.yml</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.lt.xlf</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/translations/SonataCoreBundle.lt.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.lt.xliff</argument>
            <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/translations/SonataMediaBundle.lt.xliff</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.lt.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.lt.yml</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.sr_Latn.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.sr_Latn.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.sr_Latn.yml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.da.xlf</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.da.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.da.yml</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="sv_SE" type="collection">
            <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/translations/SonataAdminBundle.sv_SE.xliff</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.ky.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.ky.yml</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.nb.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.nb.yml</argument>
          </argument>
          <argument key="eo" type="collection">
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/FOSUserBundle.eo.yml</argument>
            <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/translations/validators.eo.yml</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>fr</argument>
        </argument>
      </call>
      <autowiring-type>Symfony\Component\Translation\TranslatorInterface</autowiring-type>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="liip_functional_test.validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service">
        <service class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
              <argument type="service">
                <service class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
              </argument>
              <argument type="service" id="property_accessor"/>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
          <argument type="service" id="form.server_params"/>
        </service>
      </argument>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="liip_functional_test.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service">
        <service class="Symfony\Component\Asset\PathPackage" public="false">
          <argument></argument>
          <argument type="service">
            <service class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
          </argument>
          <argument type="service" id="assets.context"/>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/var/www/html/bio/var/cache/dev</argument>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
          <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/config/validation.xml</argument>
          <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/var/www/html/bio/src/AppBundle/Resources/config/validation.yml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service">
            <service class="FOS\UserBundle\Validator\Initializer" public="false">
              <tag name="validator.initializer"/>
              <argument type="service" id="fos_user.util.canonical_fields_updater"/>
            </service>
          </argument>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/DependencyInjection/Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="validator.expression">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator">validator.expression</argument>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
        <argument key="security.validator.user_password">security.validator.user_password</argument>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">security.validator.user_password</argument>
        <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">doctrine.orm.validator.unique</argument>
        <argument key="sonata.core.validator.inline">sonata.core.validator.inline</argument>
        <argument key="Sonata\CoreBundle\Validator\InlineValidator">sonata.admin.validator.inline</argument>
        <argument key="sonata.admin.validator.inline">sonata.admin.validator.inline</argument>
        <argument key="sonata.media.validator.format">sonata.media.validator.format</argument>
        <argument key="Sonata\MediaBundle\Validator\FormatValidator">sonata.media.validator.format</argument>
        <argument key="sonata.formatter.validator.formatter">sonata.formatter.validator.formatter</argument>
        <argument key="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator">sonata.formatter.validator.formatter</argument>
        <argument key="ewz_recaptcha.true">ewz_recaptcha.validator.true</argument>
        <argument key="EWZ\Bundle\RecaptchaBundle\Validator\Constraints\IsTrueValidator">ewz_recaptcha.validator.true</argument>
      </argument>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
          <argument>file:/var/www/html/bio/var/cache/dev/profiler</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
            <argument type="service" id="kernel" on-invalid="ignore"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
            <tag name="monolog.logger" channel="profiler"/>
            <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
            <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
            <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            <argument type="service" id="security.role_hierarchy"/>
            <argument type="service" id="security.logout_url_generator"/>
            <argument type="service" id="debug.security.access.decision_manager"/>
            <argument type="service" id="security.firewall.map"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
            <argument type="service" id="twig.profile"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
            <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
            <argument type="service" id="doctrine"/>
            <call method="addLogger">
              <argument>default</argument>
              <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
            <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
            <tag name="data_collector" id="block" template="SonataBlockBundle:Profiler:block.html.twig"/>
            <argument type="service" id="sonata.block.templating.helper"/>
            <argument type="collection">
              <argument>sonata.block.service.container</argument>
              <argument>sonata.page.block.container</argument>
              <argument>sonata.dashboard.block.container</argument>
              <argument>cmf.block.container</argument>
              <argument>cmf.block.slideshow</argument>
            </argument>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="EightPoints\Bundle\GuzzleBundle\DataCollector\HttpDataCollector" public="false">
            <tag name="data_collector" template="GuzzleBundle::debug" id="guzzle"/>
            <argument type="service" id="guzzle_bundle.logger"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
            <call method="setKernel">
              <argument type="service" id="kernel" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.request" class="Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
      <argument>false</argument>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-1</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>phpstorm://open?file=%%f&amp;line=%%l</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/var/www/html/bio</argument>
      <argument>/_profiler/open?file=%%f&amp;line=%%l#line%%l</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument>app.user.listener</argument>
          <argument>onNewUser</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>app.resetting.confirm</argument>
        <argument type="collection">
          <argument>app.mail.listener</argument>
          <argument>onUserPasswordResetted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument>app.exception.api_listener</argument>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>data_collector.router</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>lexik_maintenance.listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>lexik_maintenance.listener</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>knp_menu.listener.voters</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>sonata.block.cache.handler.default</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.mime_type_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.body_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.format_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>34</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>fos_rest.param_fetcher_listener</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>fos_rest.allowed_methods_listener</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.zone_matcher_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>248</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>nelmio_api_doc.event_listener.request</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>validate_request_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ValidateRequestListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>profiler_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ProfilerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>data_collector.request</argument>
        <argument>Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>twig.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>monolog.handler.console</argument>
        <argument>Symfony\Bridge\Monolog\Handler\ConsoleHandler</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.converter.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.view.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.security.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.security.interactive_login_listener</argument>
        <argument>FOS\UserBundle\EventListener\LastLoginListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.flash</argument>
        <argument>FOS\UserBundle\EventListener\FlashListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_user.listener.resetting</argument>
        <argument>FOS\UserBundle\EventListener\ResettingListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_rest.exception_listener</argument>
        <argument>FOS\RestBundle\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fos_rest.view_response_listener</argument>
        <argument>FOS\RestBundle\EventListener\ViewResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.dump_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DumpListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>web_profiler.debug_toolbar</argument>
        <argument>Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>liip_functional_test.exception_listener</argument>
        <argument>Liip\FunctionalTestBundle\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>liip_functional_test.validator</argument>
        <argument>Liip\FunctionalTestBundle\Validator\DataCollectingValidator</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
          <argument type="service">
            <service class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
          </argument>
          <argument type="collection">
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="100"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="50"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Bundle\SecurityBundle\SecurityUserValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="40"/>
                <argument type="service" id="security.token_storage"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="-100"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
                <tag name="controller.argument_value_resolver" priority="-150"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false"/>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="sonata.admin.route_loader"/>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="FOS\RestBundle\Routing\Loader\DirectoryRouteLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="FOS\RestBundle\Routing\Loader\RestRouteProcessor" public="false"/>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="FOS\RestBundle\Routing\Loader\RestRouteLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="service_container"/>
                <argument type="service" id="file_locator"/>
                <argument type="service" id="controller_name_converter"/>
                <argument type="service">
                  <service class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader" public="false">
                    <argument type="service">
                      <service class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader" public="false">
                        <argument type="service" id="annotation_reader"/>
                        <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
                        <argument type="service" id="app.util.inflector.noop"/>
                        <argument>false</argument>
                        <argument type="collection">
                          <argument key="json">false</argument>
                          <argument key="xml">false</argument>
                          <argument key="html">true</argument>
                        </argument>
                      </service>
                    </argument>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
                <argument>json</argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="FOS\RestBundle\Routing\Loader\RestRouteProcessor" public="false"/>
                </argument>
                <argument>false</argument>
                <argument type="collection">
                  <argument key="json">false</argument>
                  <argument key="xml">false</argument>
                  <argument key="html">true</argument>
                </argument>
                <argument>json</argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="FOS\RestBundle\Routing\Loader\RestRouteProcessor" public="false"/>
                </argument>
                <argument>false</argument>
                <argument type="collection">
                  <argument key="json">false</argument>
                  <argument key="xml">false</argument>
                  <argument key="html">true</argument>
                </argument>
                <argument>json</argument>
              </service>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <autowiring-type>Doctrine\Common\Annotations\Reader</autowiring-type>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <argument>/var/www/html/bio/var/cache/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="fos_user.user_provider.username_email"/>
            <argument type="service" id="security.user_checker"/>
            <argument>main</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>592c78e7d2b3c6.88422660</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection">
        <argument key="ROLE_OFFICINE_OWNER" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_OFFICINE_OWNER_CERTIFY" type="collection">
          <argument>ROLE_OFFICINE_OWNER</argument>
        </argument>
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
          </service>
        </argument>
        <argument key="security.firewall.map.context.main" type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/</argument>
          </service>
        </argument>
      </argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\DebugAccessDecisionManager" public="false">
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
          <argument type="collection"/>
          <argument>affirmative</argument>
          <argument>false</argument>
          <argument>true</argument>
        </service>
      </argument>
      <call method="setVoters">
        <argument type="collection">
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
              <tag name="security.voter" priority="250"/>
              <argument type="service" id="security.authentication.trust_resolver"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service" id="security.role_hierarchy"/>
            </service>
          </argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
              <tag name="security.voter" priority="245"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
              </argument>
              <argument type="service" id="security.authentication.trust_resolver"/>
              <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
            </service>
          </argument>
        </argument>
      </call>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
          <argument>dev</argument>
          <argument>security.user_checker</argument>
          <argument>security.request_matcher.5314eeb91110adf24b9b678372bb11bbe00e8858c519c088bfb65f525181ad3bf573fd1d</argument>
          <argument>false</argument>
          <argument></argument>
          <argument></argument>
          <argument></argument>
          <argument></argument>
          <argument></argument>
          <argument></argument>
          <argument type="collection"/>
        </service>
      </argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
            <tag name="monolog.logger" channel="security"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\AccessMap" public="false">
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/login$</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/register</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/resetting</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/admin</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>ROLE_ADMIN</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/pharmacien</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>ROLE_OFFICINE_OWNER</argument>
                  </argument>
                  <argument>null</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
                <argument>80</argument>
                <argument>443</argument>
              </service>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="collection">
              <argument type="service" id="fos_user.user_provider.username_email"/>
            </argument>
            <argument>main</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument type="service" id="security.authentication.trust_resolver"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                <argument type="service" id="router" on-invalid="null"/>
                <argument type="service" id="router" on-invalid="null"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service">
                  <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                    <argument type="service" id="router" on-invalid="null"/>
                    <argument type="service" id="router" on-invalid="null"/>
                  </service>
                </argument>
                <argument>/</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">logout</argument>
              <argument key="logout_path">/logout</argument>
            </argument>
            <call method="addHandler">
              <argument type="service">
                <service class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                <argument type="service" id="router" on-invalid="null"/>
                <argument type="service" id="router" on-invalid="null"/>
              </service>
            </argument>
            <argument>main</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
                <argument type="service" id="app.success_handler"/>
                <argument type="collection">
                  <argument key="always_use_default_target_path">false</argument>
                  <argument key="default_target_path">/</argument>
                  <argument key="login_path">/login</argument>
                  <argument key="target_path_parameter">_target_path</argument>
                  <argument key="use_referer">false</argument>
                </argument>
                <argument>main</argument>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service">
                  <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                    <argument type="service" id="router" on-invalid="null"/>
                    <argument type="service" id="router" on-invalid="null"/>
                  </service>
                </argument>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">/login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="check_path">/login_check</argument>
              <argument key="use_forward">false</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="username_parameter">_username</argument>
              <argument key="password_parameter">_password</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="csrf_token_id">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument type="service" id="security.csrf.token_manager"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument>592c78e7d2b3c6.88422660</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="fos_user.user_provider.username_email"/>
            <argument type="service" id="security.user_checker"/>
            <argument>main</argument>
            <argument type="service" id="debug.security.access.decision_manager"/>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument>_connect_as</argument>
            <argument>ROLE_ALLOWED_TO_SWITCH</argument>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
            <tag name="monolog.logger" channel="security"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="debug.security.access.decision_manager"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\AccessMap" public="false">
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/login$</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/register</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/resetting</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/admin</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>ROLE_ADMIN</argument>
                  </argument>
                  <argument>null</argument>
                </call>
                <call method="add">
                  <argument type="service">
                    <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                      <argument>^/pharmacien</argument>
                    </service>
                  </argument>
                  <argument type="collection">
                    <argument>ROLE_OFFICINE_OWNER</argument>
                  </argument>
                  <argument>null</argument>
                </call>
              </service>
            </argument>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
              <argument type="service" id="router" on-invalid="null"/>
              <argument type="service" id="router" on-invalid="null"/>
            </service>
          </argument>
          <argument>main</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service">
                <service class="Symfony\Component\Security\Http\HttpUtils" public="false">
                  <argument type="service" id="router" on-invalid="null"/>
                  <argument type="service" id="router" on-invalid="null"/>
                </service>
              </argument>
              <argument>/login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
          <argument>main</argument>
          <argument>security.user_checker</argument>
          <argument>security.request_matcher.a64d671f18e5575531d76c1d1154fdc4476cb8a79c02ed7a3469178c6d7b96b5ed4e60db</argument>
          <argument>true</argument>
          <argument>false</argument>
          <argument>fos_user.user_provider.username_email</argument>
          <argument>main</argument>
          <argument>security.authentication.form_entry_point.main</argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="collection">
            <argument>logout</argument>
            <argument>switch_user</argument>
            <argument>form_login</argument>
            <argument>anonymous</argument>
          </argument>
        </service>
      </argument>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
          <argument>SonataMediaBundle:Form:media_widgets.html.twig</argument>
        </argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/var/www/html/bio/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="app.twig_extension.officine_selector"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.logout_url_generator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="twig.profile"/>
            <argument type="service" id="debug.stopwatch" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="assets.packages"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
            <argument>/var/www/html/bio/app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="router.request_context" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="collection">
              <argument type="service" id="service_container"/>
              <argument>twig.form.renderer</argument>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\Serializer\Twig\SerializerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="jms_serializer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Twig\MenuExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Knp\Menu\Twig\Helper" public="false">
                <argument type="service" id="knp_menu.renderer_provider"/>
                <argument type="service" id="knp_menu.menu_provider"/>
                <argument type="service">
                  <service class="Knp\Menu\Util\MenuManipulator" public="false"/>
                </argument>
                <argument type="service" id="knp_menu.matcher"/>
              </service>
            </argument>
            <argument type="service" id="knp_menu.matcher"/>
            <argument type="service">
              <service class="Knp\Menu\Util\MenuManipulator" public="false"/>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.block.templating.helper"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\LocaleExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.locale"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\NumberExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.number"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\IntlBundle\Twig\Extension\DateTimeExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.intl.templating.helper.datetime"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Twig\Extension\MarkdownTwigExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="markdown.parser.parser_manager"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="ivory_ck_editor.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Sonata\FormatterBundle\Twig\Extension\TextFormatterExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="sonata.formatter.pool"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="nelmio_api_doc.twig.extension.extra_markdown"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="var_dumper.cloner"/>
            <argument type="service">
              <service class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
                <argument>null</argument>
                <argument>UTF-8</argument>
                <argument>0</argument>
                <call method="setDisplayOptions">
                  <argument type="collection">
                    <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
                  </argument>
                </call>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
                <argument>null</argument>
                <argument>UTF-8</argument>
                <argument>1</argument>
                <call method="setDisplayOptions">
                  <argument type="collection">
                    <argument key="maxStringLength">4096</argument>
                    <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
                  </argument>
                </call>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service">
          <service class="Symfony\Bridge\Twig\AppVariable" public="false">
            <call method="setEnvironment">
              <argument>dev</argument>
            </call>
            <call method="setDebug">
              <argument>true</argument>
            </call>
            <call method="setTokenStorage">
              <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            </call>
            <call method="setRequestStack">
              <argument type="service" id="request_stack" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\ContainerAwareRuntimeLoader" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">twig.runtime.httpkernel</argument>
              <argument key="Symfony\Bridge\Twig\Form\TwigRenderer">twig.form.renderer</argument>
            </argument>
            <argument type="service" id="logger" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app_config</argument>
        <argument type="collection">
          <argument key="scli_number">0 811 907 917</argument>
          <argument key="youtube_homepage">https://www.youtube.com/watch?v=G9WMPsyEXqs</argument>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin</argument>
        <argument type="service" id="sonata.admin.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_media</argument>
        <argument type="service" id="sonata.media.twig.global"/>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
          <argument>F j, Y H:i</argument>
          <argument>%d days</argument>
          <argument>null</argument>
          <argument>0</argument>
          <argument>.</argument>
          <argument>,</argument>
        </service>
      </configurator>
    </service>
    <service id="twig.profile" class="Twig_Profiler_Profile"/>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="twig.form.renderer" class="Symfony\Bridge\Twig\Form\TwigRenderer">
      <tag name="twig.runtime"/>
      <argument type="service">
        <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
          <argument type="collection">
            <argument>IvoryCKEditorBundle:Form:ckeditor_widget.html.twig</argument>
            <argument>form_div_layout.html.twig</argument>
            <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
            <argument>SonataMediaBundle:Form:media_widgets.html.twig</argument>
            <argument>EWZRecaptchaBundle:Form:ewz_recaptcha_widget.html.twig</argument>
          </argument>
          <argument type="service" id="twig"/>
        </service>
      </argument>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy"/>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.app_main_log" class="Monolog\Handler\StreamHandler">
      <argument>/var/www/html/bio/var/logs/app/app_dev.log</argument>
      <argument>200</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>/var/www/html/bio/var/logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection">
        <argument key="json" type="collection">
          <argument key="class">Sonata\Doctrine\Types\JsonType</argument>
          <argument key="commented">true</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">3306</argument>
        <argument key="dbname">biowebpro</argument>
        <argument key="user">root</argument>
        <argument key="password">1Jbgub18</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="FOS\UserBundle\Doctrine\UserListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <argument type="service" id="fos_user.util.password_updater"/>
                <argument type="service" id="fos_user.util.canonical_fields_updater"/>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service" id="sonata.media.doctrine.event_subscriber"/>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Gedmo\Tree\TreeListener" public="false">
                <tag name="doctrine.event_subscriber" connection="default"/>
                <call method="setAnnotationReader">
                  <argument type="service" id="annotation_reader"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Gedmo\Timestampable\TimestampableListener" public="false">
                <tag name="doctrine.event_subscriber" connection="default"/>
                <call method="setAnnotationReader">
                  <argument type="service" id="annotation_reader"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <call method="addResolveTargetEntity">
                  <argument>Shapecode\Bundle\CronBundle\Entity\Interfaces\CronJobInterface</argument>
                  <argument>Shapecode\Bundle\CronBundle\Entity\CronJob</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Shapecode\Bundle\CronBundle\Entity\Interfaces\CronJobResultInterface</argument>
                  <argument>Shapecode\Bundle\CronBundle\Entity\CronJobResult</argument>
                  <argument type="collection"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>loadClassMetadata</argument>
            </argument>
            <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_137e009baff3bd4448c50a56d0966bb4e4535d02ca4bd2f78ef6255a4b0db468</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_137e009baff3bd4448c50a56d0966bb4e4535d02ca4bd2f78ef6255a4b0db468</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_137e009baff3bd4448c50a56d0966bb4e4535d02ca4bd2f78ef6255a4b0db468</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Doctrine\ORM\Configuration" public="false">
          <call method="setEntityNamespaces">
            <argument type="collection">
              <argument key="GedmoTree">Gedmo\Tree\Entity</argument>
              <argument key="SonataClassificationBundle">Sonata\ClassificationBundle\Entity</argument>
              <argument key="SonataMediaBundle">Sonata\MediaBundle\Entity</argument>
              <argument key="ShapecodeCronBundle">Shapecode\Bundle\CronBundle\Entity</argument>
              <argument key="AppBundle">AppBundle\Entity</argument>
            </argument>
          </call>
          <call method="setMetadataCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
          </call>
          <call method="setQueryCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
          </call>
          <call method="setResultCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
          </call>
          <call method="setMetadataDriverImpl">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/var/www/html/bio/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity</argument>
                        <argument>/var/www/html/bio/vendor/shapecode/cron-bundle/src/Entity</argument>
                        <argument>/var/www/html/bio/src/AppBundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Gedmo\Tree\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/var/www/html/bio/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity</argument>
                        <argument>/var/www/html/bio/vendor/shapecode/cron-bundle/src/Entity</argument>
                        <argument>/var/www/html/bio/src/AppBundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>Shapecode\Bundle\CronBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
                      <argument type="service" id="annotation_reader"/>
                      <argument type="collection">
                        <argument>/var/www/html/bio/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity</argument>
                        <argument>/var/www/html/bio/vendor/shapecode/cron-bundle/src/Entity</argument>
                        <argument>/var/www/html/bio/src/AppBundle/Entity</argument>
                      </argument>
                    </service>
                  </argument>
                  <argument>AppBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\ClassificationBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
                      <argument type="collection">
                        <argument key="/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/config/doctrine">Sonata\ClassificationBundle\Entity</argument>
                        <argument key="/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/config/doctrine">Sonata\MediaBundle\Entity</argument>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>mapping</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Sonata\MediaBundle\Entity</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
                      <argument type="service">
                        <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                          <argument type="collection">
                            <argument key="/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/config/doctrine-mapping">FOS\UserBundle\Model</argument>
                          </argument>
                          <argument>.orm.xml</argument>
                        </service>
                      </argument>
                    </service>
                  </argument>
                  <argument>FOS\UserBundle\Model</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setProxyDir">
            <argument>/var/www/html/bio/var/cache/dev/doctrine/orm/Proxies</argument>
          </call>
          <call method="setProxyNamespace">
            <argument>Proxies</argument>
          </call>
          <call method="setAutoGenerateProxyClasses">
            <argument>true</argument>
          </call>
          <call method="setClassMetadataFactoryName">
            <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
          </call>
          <call method="setDefaultRepositoryClassName">
            <argument>Doctrine\ORM\EntityRepository</argument>
          </call>
          <call method="setNamingStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
            </argument>
          </call>
          <call method="setQuoteStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
            </argument>
          </call>
          <call method="setEntityListenerResolver">
            <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
          </call>
        </service>
      </argument>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service">
        <service class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
          <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
        </service>
      </argument>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
      </argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="stof_doctrine_extensions.uploadable.manager" class="Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager">
      <argument type="service">
        <service class="Gedmo\Uploadable\UploadableListener" public="false">
          <argument type="service">
            <service class="Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter" public="false"/>
          </argument>
          <call method="setAnnotationReader">
            <argument type="service" id="annotation_reader"/>
          </call>
          <call method="setDefaultFileInfoClass">
            <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
          </call>
        </service>
      </argument>
      <argument>Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
    </service>
    <service id="lexik_maintenance.driver.factory" class="Lexik\Bundle\MaintenanceBundle\Drivers\DriverFactory">
      <argument type="service">
        <service class="Lexik\Bundle\MaintenanceBundle\Drivers\DatabaseDriver" public="false">
          <argument type="service" id="doctrine" on-invalid="ignore"/>
        </service>
      </argument>
      <argument type="service" id="translator.default"/>
      <argument type="collection">
        <argument key="class">\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver</argument>
        <argument key="options" type="collection">
          <argument key="file_path">/var/www/html/bio/app/cache/lock</argument>
        </argument>
        <argument key="ttl">null</argument>
      </argument>
    </service>
    <service id="lexik_maintenance.listener" class="Lexik\Bundle\MaintenanceBundle\Listener\MaintenanceListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <argument type="service" id="lexik_maintenance.driver.factory"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>503</argument>
      <argument>Service Temporarily Unavailable</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="FOS\RestBundle\Serializer\JMSHandlerRegistry">
      <argument type="service" id="fos_rest.serializer.jms_handler_registry"/>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sO</argument>
      <argument>Europe/Berlin</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="FOS\RestBundle\Serializer\Normalizer\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service">
        <service class="Metadata\Driver\LazyLoadingDriver" public="false">
          <argument type="service" id="service_container"/>
          <argument>jms_serializer.metadata_driver</argument>
        </service>
      </argument>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service">
          <service class="Metadata\Cache\FileCache" public="false">
            <argument>/var/www/html/bio/var/cache/dev/jms_serializer</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service">
        <service class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
          <call method="registerProvider">
            <argument type="service">
              <service class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false"/>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy"/>
    </service>
    <service id="jms_serializer.serialization_context_factory" class="JMS\Serializer\ContextFactory\DefaultSerializationContextFactory"/>
    <service id="jms_serializer.deserialization_context_factory" class="JMS\Serializer\ContextFactory\DefaultDeserializationContextFactory"/>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory">
      <call method="addExtension">
        <argument type="service">
          <service class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
            <tag name="knp_menu.factory_extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher">
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.children"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.active"/>
      </call>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider">
      <argument type="service" id="service_container"/>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="list">knp_menu.renderer.list</argument>
        <argument key="twig">knp_menu.renderer.twig</argument>
      </argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.listener.voters" class="Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
      </call>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>KnpMenuBundle::menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.date_range_picker" class="Sonata\CoreBundle\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.datetime_range_picker" class="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.core.form.type.color_selector" class="Sonata\CoreBundle\Form\Type\ColorSelectorType">
      <tag name="form.type" alias="sonata_type_color_selector"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service">
          <service class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
            <argument type="service" id="doctrine" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="sonata.block.menu.registry"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataBlockBundle:Block:block_container.html.twig">SonataBlockBundle default template</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.media</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery_list</argument>
        <argument>sonata.media.block.gallery_list</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.formatter.block.formatter</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="sonata.block.menu.registry" class="Sonata\BlockBundle\Menu\MenuRegistry">
      <argument type="collection"/>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataBlockBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataBlockBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:list_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:list_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
        <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
        <argument key="date">SonataIntlBundle:CRUD:show_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
        <argument key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:show_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
        <argument key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</argument>
        <argument key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model_autocomplete" class="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model_autocomplete"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument type="service" id="translator"/>
      <call method="setXEditableTypeMapping">
        <argument type="collection">
          <argument key="choice">select</argument>
          <argument key="boolean">select</argument>
          <argument key="text">text</argument>
          <argument key="textarea">textarea</argument>
          <argument key="html">textarea</argument>
          <argument key="email">email</argument>
          <argument key="string">text</argument>
          <argument key="smallint">text</argument>
          <argument key="bigint">text</argument>
          <argument key="integer">number</argument>
          <argument key="decimal">number</argument>
          <argument key="currency">number</argument>
          <argument key="percent">number</argument>
          <argument key="url">url</argument>
          <argument key="date">date</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>Biogaran pro connect</argument>
      <argument>assets/img/admin/admin-logo.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
      </argument>
      <argument type="service" id="property_accessor"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>admin.category</argument>
          <argument>admin.news</argument>
          <argument>admin.faq</argument>
          <argument>admin.pharmacien</argument>
          <argument>sonata.classification.admin.category</argument>
          <argument>sonata.classification.admin.tag</argument>
          <argument>sonata.classification.admin.collection</argument>
          <argument>sonata.classification.admin.context</argument>
          <argument>sonata.media.admin.media</argument>
          <argument>sonata.media.admin.gallery</argument>
          <argument>sonata.media.admin.gallery_has_media</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="app.admin.group.media" type="collection">
            <argument key="label">Media</argument>
            <argument key="icon">&lt;i class="fa fa-camera-retro"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.media.admin.media</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
          <argument key="app.admin.group.news" type="collection">
            <argument key="label">News</argument>
            <argument key="icon">&lt;i class="fa fa-newspaper-o"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.news</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
          <argument key="app.admin.group.faq" type="collection">
            <argument key="label">Faq</argument>
            <argument key="icon">&lt;i class="fa fa-question-circle"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.faq</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
          <argument key="app.admin.group.pharmacien" type="collection">
            <argument key="label">Pharmacien</argument>
            <argument key="icon">&lt;i class="fa fa-universal-access"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.pharmacien</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
            <argument key="label_catalogue">SonataAdminBundle</argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="AppBundle\Entity\Category" type="collection">
            <argument>admin.category</argument>
          </argument>
          <argument key="AppBundle\Entity\News" type="collection">
            <argument>admin.news</argument>
          </argument>
          <argument key="AppBundle\Entity\Faq" type="collection">
            <argument>admin.faq</argument>
          </argument>
          <argument key="AppBundle\Entity\Pharmacien" type="collection">
            <argument>admin.pharmacien</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Category" type="collection">
            <argument>sonata.classification.admin.category</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Tag" type="collection">
            <argument>sonata.classification.admin.tag</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Collection" type="collection">
            <argument>sonata.classification.admin.collection</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Context" type="collection">
            <argument>sonata.classification.admin.context</argument>
          </argument>
          <argument key="AppBundle\Entity\Media\Media" type="collection">
            <argument>sonata.media.admin.media</argument>
          </argument>
          <argument key="AppBundle\Entity\Media\Gallery" type="collection">
            <argument>sonata.media.admin.gallery</argument>
          </argument>
          <argument key="AppBundle\Entity\Media\GalleryHasMedia" type="collection">
            <argument>sonata.media.admin.gallery_has_media</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>admin.category</argument>
        <argument>admin.news</argument>
        <argument>admin.faq</argument>
        <argument>admin.pharmacien</argument>
        <argument>sonata.classification.admin.category</argument>
        <argument>sonata.classification.admin.tag</argument>
        <argument>sonata.classification.admin.collection</argument>
        <argument>sonata.classification.admin.context</argument>
        <argument>sonata.media.admin.media</argument>
        <argument>sonata.media.admin.gallery</argument>
        <argument>sonata.media.admin.gallery_has_media</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="doctrine_orm_model_autocomplete">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringFilter">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateFilter">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter">sonata.admin.orm.filter.type.class</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.breadcrumbs_builder" class="Sonata\AdminBundle\Admin\BreadcrumbsBuilder">
      <argument type="collection">
        <argument key="child_admin_route">edit</argument>
      </argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="liip_functional_test.validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.twig.global" class="Sonata\AdminBundle\Twig\GlobalVariables">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelTypeList">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.doctrine_orm.form.type.choice_field_mask" class="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">
      <tag name="form.type" alias="sonata_type_choice_field_mask"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType"></argument>
      </argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="sonata.admin.form.extension.choice" class="Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension">
      <tag name="form.type_extension" alias="choice" extended_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType" extended-type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="router"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>/var/www/html/bio/var/cache/dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.block.stats" class="Sonata\AdminBundle\Block\AdminStatsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.stats</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.menu_builder" class="Sonata\AdminBundle\Menu\MenuBuilder">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="knp_menu.menu_provider"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.sidebar_menu" class="Knp\Menu\MenuItem">
      <tag name="knp_menu.menu" alias="sonata_admin_sidebar"/>
      <factory service="sonata.admin.menu_builder" method="createSidebarMenu"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.admin" class="Sonata\AdminBundle\Menu\Matcher\Voter\AdminVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.children" class="Sonata\AdminBundle\Menu\Matcher\Voter\ChildrenVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.active" class="Sonata\AdminBundle\Menu\Matcher\Voter\ActiveVoter">
      <tag name="knp_menu.voter"/>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.intl.locale_detector.request_stack" class="Sonata\IntlBundle\Locale\RequestStackDetector">
      <argument type="service" id="request_stack"/>
      <argument>fr</argument>
    </service>
    <service id="sonata.intl.templating.helper.locale" class="Sonata\IntlBundle\Templating\Helper\LocaleHelper">
      <tag name="templating.helper" alias="locale"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.templating.helper.number" class="Sonata\IntlBundle\Templating\Helper\NumberHelper">
      <tag name="templating.helper" alias="number"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.templating.helper.datetime" class="Sonata\IntlBundle\Templating\Helper\DateTimeHelper">
      <tag name="templating.helper" alias="datetime"/>
      <argument type="service" id="sonata.intl.timezone_detector.chain"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.timezone_detector.chain" class="Sonata\IntlBundle\Timezone\ChainTimezoneDetector">
      <argument>Europe/Berlin</argument>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.locale"/>
      </call>
    </service>
    <service id="sonata.intl.timezone_detector.locale" class="Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="locale"/>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.classification.manager.category" class="Sonata\ClassificationBundle\Entity\CategoryManager">
      <argument>AppBundle\Entity\Classification\Category</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.classification.manager.context"/>
    </service>
    <service id="sonata.classification.manager.tag" class="Sonata\ClassificationBundle\Entity\TagManager">
      <argument>AppBundle\Entity\Classification\Tag</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.manager.collection" class="Sonata\ClassificationBundle\Entity\CollectionManager">
      <argument>AppBundle\Entity\Classification\Collection</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.manager.context" class="Sonata\ClassificationBundle\Entity\ContextManager">
      <argument>AppBundle\Entity\Classification\Context</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.form.type.category_selector" class="Sonata\ClassificationBundle\Form\Type\CategorySelectorType">
      <tag name="form.type" alias="sonata_category_selector"/>
      <argument type="service" id="sonata.classification.manager.category"/>
    </service>
    <service id="sonata.classification.serializer.handler.category" class="Sonata\ClassificationBundle\Serializer\CategorySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.category"/>
    </service>
    <service id="sonata.classification.serializer.handler.collection" class="Sonata\ClassificationBundle\Serializer\CollectionSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.collection"/>
    </service>
    <service id="sonata.classification.serializer.handler.tag" class="Sonata\ClassificationBundle\Serializer\TagSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.tag"/>
    </service>
    <service id="sonata.classification.serializer.handler.context" class="Sonata\ClassificationBundle\Serializer\ContextSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.context"/>
    </service>
    <service id="sonata.classification.controller.api.category" class="Sonata\ClassificationBundle\Controller\Api\CategoryController">
      <argument type="service" id="sonata.classification.manager.category"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.collection" class="Sonata\ClassificationBundle\Controller\Api\CollectionController">
      <argument type="service" id="sonata.classification.manager.collection"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.tag" class="Sonata\ClassificationBundle\Controller\Api\TagController">
      <argument type="service" id="sonata.classification.manager.tag"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.context" class="Sonata\ClassificationBundle\Controller\Api\ContextController">
      <argument type="service" id="sonata.classification.manager.context"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.api.form.type.category" class="Sonata\ClassificationBundle\Form\Type\ApiCategoryType">
      <tag name="form.type" alias="sonata_classification_api_form_category"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_category</argument>
      <argument>AppBundle\Entity\Classification\Category</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.collection" class="Sonata\ClassificationBundle\Form\Type\ApiCollectionType">
      <tag name="form.type" alias="sonata_classification_api_form_collection"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_collection</argument>
      <argument>AppBundle\Entity\Classification\Collection</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.tag" class="Sonata\ClassificationBundle\Form\Type\ApiTagType">
      <tag name="form.type" alias="sonata_classification_api_form_tag"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_tag</argument>
      <argument>AppBundle\Entity\Classification\Tag</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.context" class="Sonata\ClassificationBundle\Form\Type\ApiContextType">
      <tag name="form.type" alias="sonata_classification_api_form_context"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_context</argument>
      <argument>AppBundle\Entity\Classification\Context</argument>
      <argument>sonata_api_write</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.classification.admin.category" class="Sonata\ClassificationBundle\Admin\CategoryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_categories" label_catalogue="%sonata.classification.admin.category.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.category</argument>
      <argument>AppBundle\Entity\Classification\Category</argument>
      <argument>SonataClassificationBundle:CategoryAdmin</argument>
      <argument type="service" id="sonata.classification.manager.context"/>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_categories</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataClassificationBundle:CategoryAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
          <argument key="tree">SonataClassificationBundle:CategoryAdmin:tree.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.classification.admin.tag" class="Sonata\ClassificationBundle\Admin\TagAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_tags" label_catalogue="%sonata.classification.admin.tag.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.tag</argument>
      <argument>AppBundle\Entity\Classification\Tag</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <argument type="service" id="sonata.classification.manager.context"/>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_tags</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.classification.admin.collection" class="Sonata\ClassificationBundle\Admin\CollectionAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_collections" label_catalogue="%sonata.classification.admin.collection.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.collection</argument>
      <argument>AppBundle\Entity\Classification\Collection</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <argument type="service" id="sonata.classification.manager.context"/>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_collections</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.classification.admin.context" class="Sonata\ClassificationBundle\Admin\ContextAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_contexts" label_catalogue="%sonata.classification.admin.context.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.context</argument>
      <argument>AppBundle\Entity\Classification\Context</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_contexts</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.pool" class="Sonata\MediaBundle\Provider\Pool">
      <argument>default</argument>
      <call method="addContext">
        <argument>default</argument>
        <argument type="collection">
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
        </argument>
        <argument type="collection">
          <argument key="default_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="default_big" type="collection">
            <argument key="width">500</argument>
            <argument key="quality">70</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addDownloadStrategy">
        <argument>sonata.media.security.superadmin_strategy</argument>
        <argument type="service" id="sonata.media.security.superadmin_strategy"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.image</argument>
        <argument type="service" id="sonata.media.provider.image"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.file</argument>
        <argument type="service" id="sonata.media.provider.file"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.youtube</argument>
        <argument type="service" id="sonata.media.provider.youtube"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.dailymotion</argument>
        <argument type="service" id="sonata.media.provider.dailymotion"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.vimeo</argument>
        <argument type="service" id="sonata.media.provider.vimeo"/>
      </call>
    </service>
    <service id="sonata.media.thumbnail.format" class="Sonata\MediaBundle\Thumbnail\FormatThumbnail">
      <argument>jpg</argument>
    </service>
    <service id="sonata.media.provider.image" class="Sonata\MediaBundle\Provider\ImageProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.image</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>jpg</argument>
        <argument>png</argument>
        <argument>jpeg</argument>
      </argument>
      <argument type="collection">
        <argument>image/pjpeg</argument>
        <argument>image/jpeg</argument>
        <argument>image/png</argument>
        <argument>image/x-png</argument>
      </argument>
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_image.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.file" class="Sonata\MediaBundle\Provider\FileProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.file</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>pdf</argument>
        <argument>txt</argument>
        <argument>rtf</argument>
        <argument>doc</argument>
        <argument>docx</argument>
        <argument>xls</argument>
        <argument>xlsx</argument>
        <argument>ppt</argument>
        <argument>pptx</argument>
        <argument>odt</argument>
        <argument>odg</argument>
        <argument>odp</argument>
        <argument>ods</argument>
        <argument>odc</argument>
        <argument>odf</argument>
        <argument>odb</argument>
        <argument>csv</argument>
        <argument>xml</argument>
      </argument>
      <argument type="collection">
        <argument>application/pdf</argument>
        <argument>application/x-pdf</argument>
        <argument>application/rtf</argument>
        <argument>text/html</argument>
        <argument>text/rtf</argument>
        <argument>text/plain</argument>
        <argument>application/excel</argument>
        <argument>application/msword</argument>
        <argument>application/vnd.ms-excel</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.oasis.opendocument.text</argument>
        <argument>application/vnd.oasis.opendocument.graphics</argument>
        <argument>application/vnd.oasis.opendocument.presentation</argument>
        <argument>application/vnd.oasis.opendocument.spreadsheet</argument>
        <argument>application/vnd.oasis.opendocument.chart</argument>
        <argument>application/vnd.oasis.opendocument.formula</argument>
        <argument>application/vnd.oasis.opendocument.database</argument>
        <argument>application/vnd.oasis.opendocument.image</argument>
        <argument>text/comma-separated-values</argument>
        <argument>text/xml</argument>
        <argument>application/xml</argument>
        <argument>application/zip</argument>
      </argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_file.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.youtube" class="Sonata\MediaBundle\Provider\YouTubeProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.youtube</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <argument>false</argument>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_youtube.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">500</argument>
          <argument key="quality">70</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.dailymotion" class="Sonata\MediaBundle\Provider\DailyMotionProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.dailymotion</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_dailymotion.html.twig</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.vimeo" class="Sonata\MediaBundle\Provider\VimeoProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.vimeo</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">SonataMediaBundle:Provider:thumbnail.html.twig</argument>
          <argument key="helper_view">SonataMediaBundle:Provider:view_vimeo.html.twig</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.file_get_contents" class="Buzz\Client\FileGetContents">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.curl" class="Buzz\Client\Curl">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.browser" class="Buzz\Browser">
      <argument type="service" id="sonata.media.buzz.connector.curl"/>
    </service>
    <service id="sonata.media.cdn.server" class="Sonata\MediaBundle\CDN\Server">
      <argument>/web/uploads/media</argument>
    </service>
    <service id="sonata.media.twig.extension" class="Sonata\MediaBundle\Twig\Extension\MediaExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.twig.global" class="Sonata\MediaBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.security.public_strategy" class="Sonata\MediaBundle\Security\PublicDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.forbidden_strategy" class="Sonata\MediaBundle\Security\ForbiddenDownloadStrategy">
      <argument type="service" id="translator"/>
    </service>
    <service id="sonata.media.security.superadmin_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="debug.security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
        <argument>ROLE_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.media.security.session_strategy" class="Sonata\MediaBundle\Security\SessionDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service" id="session"/>
      <argument>1</argument>
    </service>
    <service id="sonata.media.security.connected_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="debug.security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>IS_AUTHENTICATED_FULLY</argument>
        <argument>IS_AUTHENTICATED_REMEMBERED</argument>
      </argument>
    </service>
    <service id="sonata.media.form.type.media" class="Sonata\MediaBundle\Form\Type\MediaType">
      <tag name="form.type" alias="sonata_media_type"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>AppBundle\Entity\Media\Media</argument>
    </service>
    <service id="sonata.media.adapter.filesystem.local" class="Sonata\MediaBundle\Filesystem\Local">
      <argument>/var/www/html/bio/app/../web/uploads/media</argument>
      <argument>false</argument>
    </service>
    <service id="sonata.media.adapter.service.s3" class="Aws\S3\S3Client">
      <argument type="collection"/>
      <factory class="Aws\S3\S3Client" method="factory"/>
    </service>
    <service id="sonata.media.filesystem.local" class="Gaufrette\Filesystem">
      <argument type="service" id="sonata.media.adapter.filesystem.local"/>
    </service>
    <service id="sonata.media.metadata.proxy" class="Sonata\MediaBundle\Metadata\ProxyMetadataBuilder">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.metadata.amazon" class="Sonata\MediaBundle\Metadata\AmazonMetadataBuilder"/>
    <service id="sonata.media.metadata.noop" class="Sonata\MediaBundle\Metadata\NoopMetadataBuilder"/>
    <service id="sonata.media.validator.format" class="Sonata\MediaBundle\Validator\FormatValidator">
      <tag name="validator.constraint_validator" alias="sonata.media.validator.format"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.serializer.handler.media" class="Sonata\MediaBundle\Serializer\MediaSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.serializer.handler.gallery" class="Sonata\MediaBundle\Serializer\GallerySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.api.form.type.doctrine.media" class="Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType">
      <tag name="form.type" alias="sonata_media_api_form_doctrine_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_doctrine_media</argument>
      <argument>AppBundle\Entity\Media\Media</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.media" class="Sonata\MediaBundle\Form\Type\ApiMediaType">
      <tag name="form.type" alias="sonata_media_api_form_media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>AppBundle\Entity\Media\Media</argument>
    </service>
    <service id="sonata.media.api.form.type.gallery" class="Sonata\MediaBundle\Form\Type\ApiGalleryType">
      <tag name="form.type" alias="sonata_media_api_form_gallery"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery</argument>
      <argument>AppBundle\Entity\Media\Gallery</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.gallery_has_media" class="Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType">
      <tag name="form.type" alias="sonata_media_api_form_gallery_has_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery_has_media</argument>
      <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.controller.api.gallery" class="Sonata\MediaBundle\Controller\Api\GalleryController">
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="form.factory"/>
      <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
    </service>
    <service id="sonata.media.controller.api.media" class="Sonata\MediaBundle\Controller\Api\MediaController">
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.media.formatter.twig" class="Sonata\MediaBundle\Twig\Extension\FormatterMediaExtension">
      <argument type="service" id="sonata.media.twig.extension"/>
    </service>
    <service id="sonata.media.block.media" class="Sonata\MediaBundle\Block\MediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.feature_media" class="Sonata\MediaBundle\Block\FeatureMediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.feature_media</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.gallery" class="Sonata\MediaBundle\Block\GalleryBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.block.gallery_list" class="Sonata\MediaBundle\Block\GalleryListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery_list</argument>
      <argument type="service" id="templating"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.manager.category.default" class="Sonata\MediaBundle\Model\CategoryManager">
      <argument type="service" id="sonata.classification.manager.category" on-invalid="null"/>
    </service>
    <service id="sonata.media.manager.media" class="Sonata\MediaBundle\Entity\MediaManager">
      <argument>AppBundle\Entity\Media\Media</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.manager.gallery" class="Sonata\MediaBundle\Entity\GalleryManager">
      <argument>AppBundle\Entity\Media\Gallery</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.generator.default" class="Sonata\MediaBundle\Generator\DefaultGenerator"/>
    <service id="sonata.media.doctrine.event_subscriber" class="Sonata\MediaBundle\Listener\ORM\MediaEventSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.admin.media" class="Sonata\MediaBundle\Admin\ORM\MediaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.media.translation_domain%" label="media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.media</argument>
      <argument>AppBundle\Entity\Media\Media</argument>
      <argument>SonataMediaBundle:MediaAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.category.default" on-invalid="null"/>
      <call method="setModelManager">
        <argument type="service" id="sonata.media.admin.media.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataMediaBundle:MediaAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataMediaBundle:MediaAdmin:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataMediaBundle:MediaAdmin:inner_row_media.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_flat_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataMediaBundle:MediaAdmin:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.ckeditor.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.admin.media.manager" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.admin.gallery" class="Sonata\MediaBundle\Admin\GalleryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label="gallery" label_catalogue="%sonata.media.admin.gallery.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery</argument>
      <argument>AppBundle\Entity\Media\Gallery</argument>
      <argument>SonataMediaBundle:GalleryAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataMediaBundle:GalleryAdmin:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.admin.gallery_has_media" class="Sonata\MediaBundle\Admin\GalleryHasMediaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.gallery_has_media.translation_domain%" label="gallery_has_media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery_has_media</argument>
      <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="liip_functional_test.validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery_has_media</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="sonata.media.adapter.image.gd" class="Imagine\Gd\Imagine"/>
    <service id="sonata.media.adapter.image.imagick" class="Imagine\Imagick\Imagine"/>
    <service id="sonata.media.adapter.image.gmagick" class="Imagine\Gmagick\Imagine"/>
    <service id="sonata.media.resizer.simple" class="Sonata\MediaBundle\Resizer\SimpleResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.resizer.square" class="Sonata\MediaBundle\Resizer\SquareResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Category</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">children</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Category</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">children</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">context</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Context</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">context</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Tag</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">context</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Context</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">context</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Collection</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">context</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Context</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">context</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\Media</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">media</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\Media</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">category</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">category_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">gallery</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Gallery</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">gallery_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\Gallery</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">gallery</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addUnique">
        <argument>AppBundle\Entity\Classification\Tag</argument>
        <argument>tag_context</argument>
        <argument type="collection">
          <argument>slug</argument>
          <argument>context</argument>
        </argument>
      </call>
      <call method="addUnique">
        <argument>AppBundle\Entity\Classification\Collection</argument>
        <argument>tag_collection</argument>
        <argument type="collection">
          <argument>slug</argument>
          <argument>context</argument>
        </argument>
      </call>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\EventListener\LastLoginListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="app.manager.user"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="fos_user.user_provider.username_email" class="FOS\UserBundle\Security\EmailUserProvider" public="false">
      <argument type="service" id="app.manager.user"/>
    </service>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="app.manager.user"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fos_user.util.password_updater" class="FOS\UserBundle\Util\PasswordUpdater" public="false">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="fos_user.util.canonical_fields_updater" class="FOS\UserBundle\Util\CanonicalFieldsUpdater" public="false">
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
      <argument type="service" id="fos_user.util.email_canonicalizer"/>
    </service>
    <service id="fos_user.listener.flash" class="FOS\UserBundle\EventListener\FlashListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service">
        <service class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
          <argument type="service" id="app.manager.user"/>
        </service>
      </argument>
    </service>
    <service id="fos_user.profile.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_profile_form</argument>
      <argument>FOS\UserBundle\Form\Type\ProfileFormType</argument>
      <argument type="collection">
        <argument>Profile</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_registration_form</argument>
      <argument>AppBundle\Form\RegistrationType</argument>
      <argument type="collection">
        <argument>AppRegistration</argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.change_password.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_change_password_form</argument>
      <argument>FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
      <argument type="collection">
        <argument>ChangePassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.resetting.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_resetting_form</argument>
      <argument>FOS\UserBundle\Form\Type\ResettingFormType</argument>
      <argument type="collection">
        <argument>AppResetting</argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.listener.resetting" class="FOS\UserBundle\EventListener\ResettingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="router"/>
      <argument>86400</argument>
    </service>
    <service id="markdown.parser.parser_manager" class="Knp\Bundle\MarkdownBundle\Parser\ParserManager" public="false">
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Min" public="false">
            <tag name="markdown.parser" alias="min"/>
          </service>
        </argument>
        <argument>min</argument>
      </call>
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Light" public="false">
            <tag name="markdown.parser" alias="light"/>
          </service>
        </argument>
        <argument>light</argument>
      </call>
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Medium" public="false">
            <tag name="markdown.parser" alias="medium"/>
          </service>
        </argument>
        <argument>medium</argument>
      </call>
      <call method="addParser">
        <argument type="service" id="markdown.parser"/>
        <argument>default</argument>
      </call>
      <call method="addParser">
        <argument type="service">
          <service class="Knp\Bundle\MarkdownBundle\Parser\Preset\Flavored" public="false">
            <tag name="markdown.parser" alias="flavored"/>
          </service>
        </argument>
        <argument>flavored</argument>
      </call>
    </service>
    <service id="templating.helper.markdown" class="Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper">
      <tag name="templating.helper" alias="markdown"/>
      <argument type="service" id="markdown.parser.parser_manager"/>
    </service>
    <service id="ivory_ck_editor.form.type" class="Ivory\CKEditorBundle\Form\Type\CKEditorType">
      <tag name="form.type"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.styles_set_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
      <argument type="service" id="ivory_ck_editor.toolbar_manager"/>
    </service>
    <service id="ivory_ck_editor.config_manager" class="Ivory\CKEditorBundle\Model\ConfigManager"/>
    <service id="ivory_ck_editor.plugin_manager" class="Ivory\CKEditorBundle\Model\PluginManager"/>
    <service id="ivory_ck_editor.styles_set_manager" class="Ivory\CKEditorBundle\Model\StylesSetManager"/>
    <service id="ivory_ck_editor.template_manager" class="Ivory\CKEditorBundle\Model\TemplateManager"/>
    <service id="ivory_ck_editor.toolbar_manager" class="Ivory\CKEditorBundle\Model\ToolbarManager"/>
    <service id="ivory_ck_editor.renderer" class="Ivory\CKEditorBundle\Renderer\CKEditorRenderer">
      <argument type="service" id="service_container"/>
    </service>
    <service id="ivory_ck_editor.renderer.json_builder" class="Ivory\JsonBuilder\JsonBuilder">
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="ivory_ck_editor.twig_extension" class="Ivory\CKEditorBundle\Twig\CKEditorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="ivory_ck_editor.renderer"/>
    </service>
    <service id="sonata.formatter.pool" class="Sonata\FormatterBundle\Formatter\Pool">
      <argument>richhtml</argument>
      <call method="setLogger">
        <argument type="service" id="logger"/>
      </call>
      <call method="add">
        <argument>richhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
      </call>
      <call method="add">
        <argument>twig</argument>
        <argument type="service" id="sonata.formatter.text.twigengine"/>
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.formatter.text.markdown" class="Sonata\FormatterBundle\Formatter\MarkdownFormatter">
      <tag name="sonata.text.formatter" code="markdown"/>
      <argument type="service" id="markdown.parser"/>
    </service>
    <service id="sonata.formatter.text.text" class="Sonata\FormatterBundle\Formatter\TextFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.raw" class="Sonata\FormatterBundle\Formatter\RawFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.twigengine" class="Sonata\FormatterBundle\Formatter\TwigFormatter">
      <tag name="sonata.text.formatter"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.formatter.twig.gist" class="Sonata\FormatterBundle\Extension\GistExtension"/>
    <service id="sonata.formatter.twig.control_flow" class="Sonata\FormatterBundle\Extension\ControlFlowExtension"/>
    <service id="sonata.formatter.validator.formatter" class="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator">
      <tag name="validator.constraint_validator" alias="sonata.formatter.validator.formatter"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.formatter.form.type.selector" class="Sonata\FormatterBundle\Form\Type\FormatterType">
      <tag name="form.type" alias="sonata_formatter_type"/>
      <argument type="service" id="sonata.formatter.pool"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="sonata.formatter.form.type.simple" class="Sonata\FormatterBundle\Form\Type\SimpleFormatterType">
      <tag name="form.type" alias="sonata_simple_formatter_type"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="sonata.formatter.block.formatter" class="Sonata\FormatterBundle\Block\FormatterBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.formatter.block.formatter</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="sonata.formatter.ckeditor.extension" class="Sonata\FormatterBundle\Admin\CkeditorAdminExtension">
      <tag name="sonata.admin.extension" target="sonata.media.admin.media"/>
    </service>
    <service id="sonata.formatter.twig.env.richhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service">
            <service class="Twig_Loader_Array" public="false"/>
          </argument>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Sandbox" public="false">
            <argument type="service">
              <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
                <argument type="service" id="service_container"/>
                <argument type="collection">
                  <argument>sonata.formatter.twig.control_flow</argument>
                  <argument>sonata.formatter.twig.gist</argument>
                </argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service">
          <service class="Twig_Lexer" public="false">
            <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
            <argument type="collection">
              <argument key="tag_comment" type="collection">
                <argument>&lt;#</argument>
                <argument>#&gt;</argument>
              </argument>
              <argument key="tag_block" type="collection">
                <argument>&lt;%</argument>
                <argument>%&gt;</argument>
              </argument>
              <argument key="tag_variable" type="collection">
                <argument>&lt;%=</argument>
                <argument>%&gt;</argument>
              </argument>
            </argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="guzzle_bundle.formatter" class="GuzzleHttp\MessageFormatter"/>
    <service id="guzzle_bundle.logger" class="EightPoints\Bundle\GuzzleBundle\Log\Logger"/>
    <service id="guzzle_bundle.middleware.log.api_biogaran_rdi" class="EightPoints\Bundle\GuzzleBundle\Middleware\LogMiddleware">
      <argument type="service" id="guzzle_bundle.logger"/>
      <argument type="service" id="guzzle_bundle.formatter"/>
    </service>
    <service id="guzzle_bundle.middleware.event_dispatch.api_biogaran_rdi" class="EightPoints\Bundle\GuzzleBundle\Middleware\EventDispatchMiddleware">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>api_biogaran_rdi</argument>
    </service>
    <service id="guzzle.client.api_biogaran_rdi" class="GuzzleHttp\Client">
      <argument type="collection">
        <argument key="base_uri">http://preprod-simulateur360-v2.dev361.com</argument>
        <argument key="handler" type="service">
          <service class="GuzzleHttp\HandlerStack">
            <call method="push">
              <argument type="expression">service('guzzle_bundle.middleware.log.api_biogaran_rdi').log()</argument>
            </call>
            <call method="unshift">
              <argument type="expression">service('guzzle_bundle.middleware.event_dispatch.api_biogaran_rdi').dispatchEvent()</argument>
            </call>
            <factory class="GuzzleHttp\HandlerStack" method="create"/>
          </service>
        </argument>
        <argument key="headers" type="collection">
          <argument key="Accept">application/json</argument>
        </argument>
        <argument key="auth" type="collection">
          <argument>gdh</argument>
          <argument>gdhapiuser</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="liip_functional_test.validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader" public="false">
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.exception_listener" class="FOS\RestBundle\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>fos_rest.exception.twig_controller:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="fos_rest.exception.controller" class="FOS\RestBundle\Controller\ExceptionController">
      <argument type="service" id="fos_rest.view_handler"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.exception.twig_controller" class="FOS\RestBundle\Controller\TwigExceptionController">
      <argument type="service" id="fos_rest.view_handler"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
      <argument type="service" id="templating"/>
    </service>
    <service id="fos_rest.exception.codes_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.jms" class="FOS\RestBundle\Serializer\Normalizer\ExceptionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service">
        <service class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
          <argument type="collection">
            <argument key="AppBundle\Exception\ApiException">true</argument>
          </argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.mime_type_listener" class="FOS\RestBundle\EventListener\MimeTypeListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="200"/>
      <argument type="collection">
        <argument key="json" type="collection">
          <argument>application/json</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.view_response_listener" class="FOS\RestBundle\EventListener\ViewResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_rest.view_handler"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id="fos_rest.format_listener" class="FOS\RestBundle\EventListener\FormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="34"/>
      <argument type="service" id="fos_rest.format_negotiator"/>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator">
      <argument type="service" id="request_stack"/>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/_profiler|_wdt/</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="collection">
          <argument key="methods">null</argument>
          <argument key="priorities" type="collection">
            <argument>html</argument>
            <argument>json</argument>
          </argument>
          <argument key="fallback_format">html</argument>
          <argument key="attributes" type="collection"/>
          <argument key="prefer_extension">2.0</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument type="collection"/>
          </service>
        </argument>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>json</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
          <argument key="prefer_extension">2.0</argument>
        </argument>
      </call>
    </service>
    <service id="fos_rest.param_fetcher_listener" class="FOS\RestBundle\EventListener\ParamFetcherListener">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="5"/>
      <argument type="service" id="fos_rest.request.param_fetcher"/>
      <argument>false</argument>
    </service>
    <service id="fos_rest.allowed_methods_listener" class="FOS\RestBundle\EventListener\AllowedMethodsListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <argument type="service" id="fos_rest.allowed_methods_loader"/>
    </service>
    <service id="fos_rest.allowed_methods_loader" class="FOS\RestBundle\Response\AllowedMethodsLoader\AllowedMethodsRouterLoader" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="router"/>
      <argument>/var/www/html/bio/var/cache/dev/fos_rest</argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.zone_matcher_listener" class="FOS\RestBundle\EventListener\ZoneMatcherListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="248"/>
      <call method="addRequestMatcher">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/api</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="nelmio_api_doc.formatter.markdown_formatter" class="Nelmio\ApiDocBundle\Formatter\MarkdownFormatter"/>
    <service id="nelmio_api_doc.formatter.simple_formatter" class="Nelmio\ApiDocBundle\Formatter\SimpleFormatter"/>
    <service id="nelmio_api_doc.formatter.html_formatter" class="Nelmio\ApiDocBundle\Formatter\HtmlFormatter">
      <call method="setTemplatingEngine">
        <argument type="service" id="templating"/>
      </call>
      <call method="setMotdTemplate">
        <argument>NelmioApiDocBundle::Components/motd.html.twig</argument>
      </call>
      <call method="setApiName">
        <argument>Biogaran Pro API Documentation</argument>
      </call>
      <call method="setEnableSandbox">
        <argument>true</argument>
      </call>
      <call method="setEndpoint">
        <argument>null</argument>
      </call>
      <call method="setRequestFormatMethod">
        <argument>accept_header</argument>
      </call>
      <call method="setRequestFormats">
        <argument type="collection"/>
      </call>
      <call method="setDefaultRequestFormat">
        <argument>json</argument>
      </call>
      <call method="setAcceptType">
        <argument>application/json</argument>
      </call>
      <call method="setBodyFormats">
        <argument type="collection"/>
      </call>
      <call method="setDefaultBodyFormat">
        <argument>json</argument>
      </call>
      <call method="setAuthentication">
        <argument>null</argument>
      </call>
      <call method="setDefaultSectionsOpened">
        <argument>true</argument>
      </call>
    </service>
    <service id="nelmio_api_doc.formatter.swagger_formatter" class="Nelmio\ApiDocBundle\Formatter\SwaggerFormatter">
      <argument>dot_notation</argument>
      <call method="setBasePath">
        <argument>/api</argument>
      </call>
      <call method="setApiVersion">
        <argument>0.1</argument>
      </call>
      <call method="setSwaggerVersion">
        <argument>1.2</argument>
      </call>
      <call method="setInfo">
        <argument type="collection">
          <argument key="title">Symfony2</argument>
          <argument key="description">My awesome Symfony2 app!</argument>
          <argument key="TermsOfServiceUrl">null</argument>
          <argument key="contact">null</argument>
          <argument key="license">null</argument>
          <argument key="licenseUrl">null</argument>
        </argument>
      </call>
    </service>
    <service id="nelmio_api_doc.doc_comment_extractor" class="Nelmio\ApiDocBundle\Util\DocCommentExtractor"/>
    <service id="nelmio_api_doc.extractor.api_doc_extractor" class="Nelmio\ApiDocBundle\Extractor\ApiDocExtractor">
      <argument type="service" id="service_container"/>
      <argument type="service" id="router"/>
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
          <argument type="service" id="kernel"/>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler" public="false">
            <tag name="nelmio_api_doc.extractor.handler"/>
            <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
          </service>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.json_serializable_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.collection_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_errors_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_type_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.validation_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.jms_metadata_parser"/>
      </call>
    </service>
    <service id="nelmio_api_doc.form.extension.description_form_type_extension" class="Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="nelmio_api_doc.twig.extension.extra_markdown" class="Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="nelmio_api_doc.parser.collection_parser" class="Nelmio\ApiDocBundle\Parser\CollectionParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.parser.form_errors_parser" class="Nelmio\ApiDocBundle\Parser\FormErrorsParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.parser.json_serializable_parser" class="Nelmio\ApiDocBundle\Parser\JsonSerializableParser">
      <tag name="nelmio_api_doc.extractor.parser" priority="1"/>
    </service>
    <service id="nelmio_api_doc.event_listener.request" class="Nelmio\ApiDocBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="service" id="nelmio_api_doc.extractor.api_doc_extractor"/>
      <argument type="service" id="nelmio_api_doc.formatter.html_formatter"/>
      <argument>_doc</argument>
    </service>
    <service id="ewz_recaptcha.form.type" class="EWZ\Bundle\RecaptchaBundle\Form\Type\EWZRecaptchaType">
      <tag name="form.type"/>
      <argument>6LdnMxgUAAAAAHjG60oxrfd9K2Y61w3DrZ994LPV</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument type="service">
        <service class="EWZ\Bundle\RecaptchaBundle\Locale\LocaleResolver" public="false">
          <argument>fr</argument>
          <argument>false</argument>
          <argument type="service" id="request_stack"/>
        </service>
      </argument>
    </service>
    <service id="ewz_recaptcha.validator.true" class="EWZ\Bundle\RecaptchaBundle\Validator\Constraints\IsTrueValidator">
      <tag name="validator.constraint_validator" alias="ewz_recaptcha.true"/>
      <argument>true</argument>
      <argument>6LdnMxgUAAAAAPL-nDs2NmwRQAyJe0mofm9wG_ER</argument>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="host">null</argument>
        <argument key="port">null</argument>
        <argument key="auth">null</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.translation" type="collection">
          <argument>translation</argument>
          <argument>@WebProfiler/Collector/translation.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="data_collector.twig" type="collection">
          <argument>twig</argument>
          <argument>@WebProfiler/Collector/twig.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.dump" type="collection">
          <argument>dump</argument>
          <argument>@Debug/Profiler/dump.html.twig</argument>
        </argument>
        <argument key="sonata.block.data_collector" type="collection">
          <argument>block</argument>
          <argument>SonataBlockBundle:Profiler:block.html.twig</argument>
        </argument>
        <argument key="guzzle_bundle.data_collector" type="collection">
          <argument>guzzle</argument>
          <argument>GuzzleBundle::debug</argument>
        </argument>
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/var/www/html/bio</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service">
        <service class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
      </argument>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <argument>^/(app(_[\w]+)?\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="hautelook_alice.faker" class="Faker\Generator" lazy="true">
      <argument>fr_FR</argument>
      <call method="seed">
        <argument>1</argument>
      </call>
      <factory class="Faker\Factory" method="create"/>
    </service>
    <service id="hautelook_alice.alice.processor_chain" class="Hautelook\AliceBundle\Alice\ProcessorChain" lazy="true">
      <argument type="collection"/>
    </service>
    <service id="hautelook_alice.faker.provider_chain" class="Hautelook\AliceBundle\Faker\Provider\ProviderChain" lazy="true">
      <argument type="collection"/>
    </service>
    <service id="hautelook_alice.doctrine.executor.fixtures_executor" class="Hautelook\AliceBundle\Doctrine\DataFixtures\Executor\FixturesExecutor" lazy="true"/>
    <service id="hautelook_alice.alice.fixtures.loader" class="Hautelook\AliceBundle\Alice\DataFixtures\Fixtures\Loader">
      <argument>fr_FR</argument>
      <argument type="service" id="hautelook_alice.faker.provider_chain"/>
      <argument>1</argument>
      <argument type="collection">
        <argument key="kernel.root_dir">/var/www/html/bio/app</argument>
        <argument key="kernel.environment">dev</argument>
        <argument key="kernel.debug">true</argument>
        <argument key="kernel.name">app</argument>
        <argument key="kernel.cache_dir">/var/www/html/bio/var/cache/dev</argument>
        <argument key="kernel.logs_dir">/var/www/html/bio/var/logs</argument>
        <argument key="kernel.bundles" type="collection">
          <argument key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</argument>
          <argument key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</argument>
          <argument key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</argument>
          <argument key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</argument>
          <argument key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</argument>
          <argument key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</argument>
          <argument key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</argument>
          <argument key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</argument>
          <argument key="LexikMaintenanceBundle">Lexik\Bundle\MaintenanceBundle\LexikMaintenanceBundle</argument>
          <argument key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</argument>
          <argument key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</argument>
          <argument key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</argument>
          <argument key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</argument>
          <argument key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</argument>
          <argument key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</argument>
          <argument key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</argument>
          <argument key="SonataClassificationBundle">Sonata\ClassificationBundle\SonataClassificationBundle</argument>
          <argument key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</argument>
          <argument key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</argument>
          <argument key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</argument>
          <argument key="ShapecodeCronBundle">Shapecode\Bundle\CronBundle\ShapecodeCronBundle</argument>
          <argument key="AppBundle">AppBundle\AppBundle</argument>
          <argument key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</argument>
          <argument key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</argument>
          <argument key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</argument>
          <argument key="RedCodeTreeBundle">RedCode\TreeBundle\RedCodeTreeBundle</argument>
          <argument key="GuzzleBundle">EightPoints\Bundle\GuzzleBundle\GuzzleBundle</argument>
          <argument key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</argument>
          <argument key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</argument>
          <argument key="EWZRecaptchaBundle">EWZ\Bundle\RecaptchaBundle\EWZRecaptchaBundle</argument>
          <argument key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</argument>
          <argument key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</argument>
          <argument key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</argument>
          <argument key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</argument>
          <argument key="HautelookAliceBundle">Hautelook\AliceBundle\HautelookAliceBundle</argument>
          <argument key="LiipFunctionalTestBundle">Liip\FunctionalTestBundle\LiipFunctionalTestBundle</argument>
        </argument>
        <argument key="kernel.bundles_metadata" type="collection">
          <argument key="FrameworkBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle</argument>
            <argument key="namespace">Symfony\Bundle\FrameworkBundle</argument>
          </argument>
          <argument key="SecurityBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle</argument>
            <argument key="namespace">Symfony\Bundle\SecurityBundle</argument>
          </argument>
          <argument key="TwigBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle</argument>
            <argument key="namespace">Symfony\Bundle\TwigBundle</argument>
          </argument>
          <argument key="MonologBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/symfony/monolog-bundle</argument>
            <argument key="namespace">Symfony\Bundle\MonologBundle</argument>
          </argument>
          <argument key="SwiftmailerBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/symfony/swiftmailer-bundle</argument>
            <argument key="namespace">Symfony\Bundle\SwiftmailerBundle</argument>
          </argument>
          <argument key="DoctrineBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/doctrine/doctrine-bundle</argument>
            <argument key="namespace">Doctrine\Bundle\DoctrineBundle</argument>
          </argument>
          <argument key="SensioFrameworkExtraBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sensio/framework-extra-bundle</argument>
            <argument key="namespace">Sensio\Bundle\FrameworkExtraBundle</argument>
          </argument>
          <argument key="StofDoctrineExtensionsBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/stof/doctrine-extensions-bundle</argument>
            <argument key="namespace">Stof\DoctrineExtensionsBundle</argument>
          </argument>
          <argument key="LexikMaintenanceBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/lexik/maintenance-bundle</argument>
            <argument key="namespace">Lexik\Bundle\MaintenanceBundle</argument>
          </argument>
          <argument key="JMSSerializerBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/jms/serializer-bundle/JMS/SerializerBundle</argument>
            <argument key="namespace">JMS\SerializerBundle</argument>
          </argument>
          <argument key="KnpMenuBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/knplabs/knp-menu-bundle</argument>
            <argument key="namespace">Knp\Bundle\MenuBundle</argument>
          </argument>
          <argument key="SonataCoreBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/core-bundle</argument>
            <argument key="namespace">Sonata\CoreBundle</argument>
          </argument>
          <argument key="SonataBlockBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/block-bundle</argument>
            <argument key="namespace">Sonata\BlockBundle</argument>
          </argument>
          <argument key="SonataDoctrineORMAdminBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/doctrine-orm-admin-bundle</argument>
            <argument key="namespace">Sonata\DoctrineORMAdminBundle</argument>
          </argument>
          <argument key="SonataAdminBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/admin-bundle</argument>
            <argument key="namespace">Sonata\AdminBundle</argument>
          </argument>
          <argument key="SonataIntlBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/intl-bundle</argument>
            <argument key="namespace">Sonata\IntlBundle</argument>
          </argument>
          <argument key="SonataClassificationBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/classification-bundle</argument>
            <argument key="namespace">Sonata\ClassificationBundle</argument>
          </argument>
          <argument key="SonataMediaBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/media-bundle</argument>
            <argument key="namespace">Sonata\MediaBundle</argument>
          </argument>
          <argument key="SonataEasyExtendsBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/easy-extends-bundle</argument>
            <argument key="namespace">Sonata\EasyExtendsBundle</argument>
          </argument>
          <argument key="FOSUserBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/friendsofsymfony/user-bundle</argument>
            <argument key="namespace">FOS\UserBundle</argument>
          </argument>
          <argument key="ShapecodeCronBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/shapecode/cron-bundle/src</argument>
            <argument key="namespace">Shapecode\Bundle\CronBundle</argument>
          </argument>
          <argument key="AppBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/src/AppBundle</argument>
            <argument key="namespace">AppBundle</argument>
          </argument>
          <argument key="KnpMarkdownBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/knplabs/knp-markdown-bundle</argument>
            <argument key="namespace">Knp\Bundle\MarkdownBundle</argument>
          </argument>
          <argument key="IvoryCKEditorBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/egeloen/ckeditor-bundle</argument>
            <argument key="namespace">Ivory\CKEditorBundle</argument>
          </argument>
          <argument key="SonataFormatterBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sonata-project/formatter-bundle</argument>
            <argument key="namespace">Sonata\FormatterBundle</argument>
          </argument>
          <argument key="RedCodeTreeBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/redcode/tree-bundle/RedCode/TreeBundle</argument>
            <argument key="namespace">RedCode\TreeBundle</argument>
          </argument>
          <argument key="GuzzleBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/eightpoints/guzzle-bundle/EightPoints/Bundle/GuzzleBundle</argument>
            <argument key="namespace">EightPoints\Bundle\GuzzleBundle</argument>
          </argument>
          <argument key="FOSRestBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/friendsofsymfony/rest-bundle</argument>
            <argument key="namespace">FOS\RestBundle</argument>
          </argument>
          <argument key="NelmioApiDocBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle</argument>
            <argument key="namespace">Nelmio\ApiDocBundle</argument>
          </argument>
          <argument key="EWZRecaptchaBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src</argument>
            <argument key="namespace">EWZ\Bundle\RecaptchaBundle</argument>
          </argument>
          <argument key="DebugBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle</argument>
            <argument key="namespace">Symfony\Bundle\DebugBundle</argument>
          </argument>
          <argument key="WebProfilerBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle</argument>
            <argument key="namespace">Symfony\Bundle\WebProfilerBundle</argument>
          </argument>
          <argument key="SensioDistributionBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sensio/distribution-bundle</argument>
            <argument key="namespace">Sensio\Bundle\DistributionBundle</argument>
          </argument>
          <argument key="SensioGeneratorBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/sensio/generator-bundle</argument>
            <argument key="namespace">Sensio\Bundle\GeneratorBundle</argument>
          </argument>
          <argument key="HautelookAliceBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/hautelook/alice-bundle/src</argument>
            <argument key="namespace">Hautelook\AliceBundle</argument>
          </argument>
          <argument key="LiipFunctionalTestBundle" type="collection">
            <argument key="parent">null</argument>
            <argument key="path">/var/www/html/bio/vendor/liip/functional-test-bundle</argument>
            <argument key="namespace">Liip\FunctionalTestBundle</argument>
          </argument>
        </argument>
        <argument key="kernel.charset">UTF-8</argument>
        <argument key="kernel.container_class">appDevDebugProjectContainer</argument>
        <argument key="database_host">127.0.0.1</argument>
        <argument key="database_port">3306</argument>
        <argument key="database_name">biowebpro</argument>
        <argument key="database_user">root</argument>
        <argument key="database_password">1Jbgub18</argument>
        <argument key="mailer_transport">smtp</argument>
        <argument key="mailer_host">127.0.0.1</argument>
        <argument key="mailer_user">null</argument>
        <argument key="mailer_password">null</argument>
        <argument key="secret">ThisTokenIsNotSoSecretChangeIt</argument>
        <argument key="rdi_send_mail">dev@groupe361.com</argument>
        <argument key="import_dir">/var/www/html/bio/app/../var/import</argument>
        <argument key="app" type="collection">
          <argument key="scli_number">0 811 907 917</argument>
          <argument key="youtube_homepage">https://www.youtube.com/watch?v=G9WMPsyEXqs</argument>
        </argument>
        <argument key="app_mail_adresses" type="collection">
          <argument key="from_email" type="collection">
            <argument key="noreply">noreply@proconnect.com</argument>
          </argument>
          <argument key="to_email" type="collection">
            <argument key="contact" type="collection">
              <argument key="test@proconnect.com">Biogaran Pro Connect</argument>
            </argument>
          </argument>
        </argument>
        <argument key="import" type="collection">
          <argument key="officines-pharmaciens" type="collection">
            <argument key="officines" type="collection">
              <argument key="type">csv</argument>
              <argument key="mode">DIFF_WITHOUT_DELETE</argument>
              <argument key="batchSize">100</argument>
              <argument key="entity">AppBundle\Entity\Officine</argument>
              <argument key="filePattern">neo_sp_off_[0-9]{12}.csv</argument>
              <argument key="encoding">Windows-1252</argument>
            </argument>
            <argument key="pharmaciens" type="collection">
              <argument key="type">csv</argument>
              <argument key="mode">DIFF_WITHOUT_DELETE</argument>
              <argument key="batchSize">100</argument>
              <argument key="entity">AppBundle\Entity\Pharmacien</argument>
              <argument key="filePattern">neo_sp_int_[0-9]{12}.csv</argument>
              <argument key="encoding">Windows-1252</argument>
            </argument>
            <argument key="officines-pharmaciens" type="collection">
              <argument key="type">csv</argument>
              <argument key="mode">DIFF_WITHOUT_DELETE</argument>
              <argument key="batchSize">100</argument>
              <argument key="entity">AppBundle\Entity\OfficinePharmacien</argument>
              <argument key="filePattern">neo_sp_lpi_[0-9]{12}.csv</argument>
              <argument key="encoding">Windows-1252</argument>
            </argument>
          </argument>
          <argument key="contrats" type="collection">
            <argument key="contrats" type="collection">
              <argument key="type">csv</argument>
              <argument key="mode">DIFF_WITHOUT_DELETE</argument>
              <argument key="batchSize">100</argument>
              <argument key="entity">AppBundle\Entity\Contrat</argument>
              <argument key="filePattern">neo_sp_cnt_[0-9]{12}.csv</argument>
              <argument key="encoding">Windows-1252</argument>
            </argument>
          </argument>
        </argument>
        <argument key="rdi" type="collection">
          <argument key="send_type" type="collection">
            <argument>api</argument>
            <argument>mail</argument>
          </argument>
          <argument key="main_handler">api</argument>
          <argument key="send_from">admin@proconnect.com</argument>
          <argument key="send_to">dev@groupe361.com</argument>
        </argument>
        <argument key="locale">fr</argument>
        <argument key="shapecode_cron.target_entity_resolver.cron_job.class">Shapecode\Bundle\CronBundle\Entity\CronJob</argument>
        <argument key="shapecode_cron.target_entity_resolver.cron_job_result.class">Shapecode\Bundle\CronBundle\Entity\CronJobResult</argument>
        <argument key="fragment.renderer.hinclude.global_template">null</argument>
        <argument key="fragment.path">/_fragment</argument>
        <argument key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</argument>
        <argument key="kernel.http_method_override">true</argument>
        <argument key="kernel.trusted_hosts" type="collection"/>
        <argument key="kernel.trusted_proxies" type="collection"/>
        <argument key="kernel.default_locale">fr</argument>
        <argument key="templating.helper.code.file_link_format">phpstorm://open?file=%%f&amp;line=%%l</argument>
        <argument key="debug.file_link_format">phpstorm://open?file=%%f&amp;line=%%l</argument>
        <argument key="session.metadata.storage_key">_sf2_meta</argument>
        <argument key="session.storage.options" type="collection">
          <argument key="cookie_httponly">true</argument>
          <argument key="gc_probability">1</argument>
        </argument>
        <argument key="session.save_path">/var/www/html/bio/app/../var/sessions/dev</argument>
        <argument key="session.metadata.update_threshold">0</argument>
        <argument key="form.type_extension.csrf.enabled">true</argument>
        <argument key="form.type_extension.csrf.field_name">_token</argument>
        <argument key="templating.loader.cache.path">null</argument>
        <argument key="templating.engines" type="collection">
          <argument>twig</argument>
        </argument>
        <argument key="validator.mapping.cache.prefix"></argument>
        <argument key="validator.mapping.cache.file">/var/www/html/bio/var/cache/dev/validation.php</argument>
        <argument key="validator.translation_domain">validators</argument>
        <argument key="translator.logging">true</argument>
        <argument key="profiler_listener.only_exceptions">false</argument>
        <argument key="profiler_listener.only_master_requests">false</argument>
        <argument key="profiler.storage.dsn">file:/var/www/html/bio/var/cache/dev/profiler</argument>
        <argument key="debug.error_handler.throw_at">-1</argument>
        <argument key="debug.container.dump">/var/www/html/bio/var/cache/dev/appDevDebugProjectContainer.xml</argument>
        <argument key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="router.request_context.host">localhost</argument>
        <argument key="router.request_context.scheme">http</argument>
        <argument key="router.request_context.base_url"></argument>
        <argument key="router.resource">/var/www/html/bio/app/config/routing_dev.yml</argument>
        <argument key="router.cache_class_prefix">appDevDebugProjectContainer</argument>
        <argument key="request_listener.http_port">80</argument>
        <argument key="request_listener.https_port">443</argument>
        <argument key="serializer.mapping.cache.file">/var/www/html/bio/var/cache/dev/serialization.php</argument>
        <argument key="serializer.mapping.cache.prefix"></argument>
        <argument key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
        <argument key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
        <argument key="security.role_hierarchy.roles" type="collection">
          <argument key="ROLE_OFFICINE_OWNER" type="collection">
            <argument>ROLE_USER</argument>
          </argument>
          <argument key="ROLE_OFFICINE_OWNER_CERTIFY" type="collection">
            <argument>ROLE_OFFICINE_OWNER</argument>
          </argument>
          <argument key="ROLE_ADMIN" type="collection">
            <argument>ROLE_USER</argument>
            <argument>ROLE_SONATA_ADMIN</argument>
            <argument>ROLE_ALLOWED_TO_SWITCH</argument>
          </argument>
          <argument key="ROLE_SUPER_ADMIN" type="collection">
            <argument>ROLE_ADMIN</argument>
          </argument>
        </argument>
        <argument key="security.access.denied_url">null</argument>
        <argument key="security.authentication.manager.erase_credentials">true</argument>
        <argument key="security.authentication.session_strategy.strategy">migrate</argument>
        <argument key="security.access.always_authenticate_before_granting">false</argument>
        <argument key="security.authentication.hide_user_not_found">true</argument>
        <argument key="twig.exception_listener.controller">twig.controller.exception:showAction</argument>
        <argument key="twig.form.resources" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>SonataFormatterBundle:Form:formatter.html.twig</argument>
          <argument>SonataMediaBundle:Form:media_widgets.html.twig</argument>
          <argument>EWZRecaptchaBundle:Form:ewz_recaptcha_widget.html.twig</argument>
        </argument>
        <argument key="monolog.use_microseconds">true</argument>
        <argument key="monolog.swift_mailer.handlers" type="collection"/>
        <argument key="monolog.handlers_to_channels" type="collection">
          <argument key="monolog.handler.console" type="collection">
            <argument key="type">exclusive</argument>
            <argument key="elements" type="collection">
              <argument>event</argument>
              <argument>doctrine</argument>
            </argument>
          </argument>
          <argument key="monolog.handler.main" type="collection">
            <argument key="type">exclusive</argument>
            <argument key="elements" type="collection">
              <argument>event</argument>
            </argument>
          </argument>
          <argument key="monolog.handler.app_main_log" type="collection">
            <argument key="type">inclusive</argument>
            <argument key="elements" type="collection">
              <argument>console</argument>
              <argument>import</argument>
            </argument>
          </argument>
        </argument>
        <argument key="monolog.additional_channels" type="collection">
          <argument>import</argument>
          <argument>console</argument>
        </argument>
        <argument key="swiftmailer.class">Swift_Mailer</argument>
        <argument key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</argument>
        <argument key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</argument>
        <argument key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</argument>
        <argument key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</argument>
        <argument key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</argument>
        <argument key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</argument>
        <argument key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</argument>
        <argument key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</argument>
        <argument key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</argument>
        <argument key="swiftmailer.spool.file.class">Swift_FileSpool</argument>
        <argument key="swiftmailer.spool.memory.class">Swift_MemorySpool</argument>
        <argument key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
        <argument key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</argument>
        <argument key="swiftmailer.mailer.default.transport.name">smtp</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.encryption">null</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.port">25</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.username">null</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.password">null</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.timeout">30</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.source_ip">null</argument>
        <argument key="swiftmailer.mailer.default.transport.smtp.local_domain">null</argument>
        <argument key="swiftmailer.spool.default.memory.path">/var/www/html/bio/var/cache/dev/swiftmailer/spool/default</argument>
        <argument key="swiftmailer.mailer.default.spool.enabled">true</argument>
        <argument key="swiftmailer.mailer.default.plugin.impersonate">null</argument>
        <argument key="swiftmailer.mailer.default.single_address">null</argument>
        <argument key="swiftmailer.mailer.default.delivery.enabled">true</argument>
        <argument key="swiftmailer.spool.enabled">true</argument>
        <argument key="swiftmailer.delivery.enabled">true</argument>
        <argument key="swiftmailer.single_address">null</argument>
        <argument key="swiftmailer.mailers" type="collection">
          <argument key="default">swiftmailer.mailer.default</argument>
        </argument>
        <argument key="swiftmailer.default_mailer">default</argument>
        <argument key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</argument>
        <argument key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</argument>
        <argument key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</argument>
        <argument key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</argument>
        <argument key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</argument>
        <argument key="doctrine_cache.couchbase.connection.class">Couchbase</argument>
        <argument key="doctrine_cache.couchbase.hostnames">localhost:8091</argument>
        <argument key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</argument>
        <argument key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</argument>
        <argument key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</argument>
        <argument key="doctrine_cache.memcache.connection.class">Memcache</argument>
        <argument key="doctrine_cache.memcache.host">localhost</argument>
        <argument key="doctrine_cache.memcache.port">11211</argument>
        <argument key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</argument>
        <argument key="doctrine_cache.memcached.connection.class">Memcached</argument>
        <argument key="doctrine_cache.memcached.host">localhost</argument>
        <argument key="doctrine_cache.memcached.port">11211</argument>
        <argument key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</argument>
        <argument key="doctrine_cache.mongodb.collection.class">MongoCollection</argument>
        <argument key="doctrine_cache.mongodb.connection.class">MongoClient</argument>
        <argument key="doctrine_cache.mongodb.server">localhost:27017</argument>
        <argument key="doctrine_cache.predis.client.class">Predis\Client</argument>
        <argument key="doctrine_cache.predis.scheme">tcp</argument>
        <argument key="doctrine_cache.predis.host">localhost</argument>
        <argument key="doctrine_cache.predis.port">6379</argument>
        <argument key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</argument>
        <argument key="doctrine_cache.redis.connection.class">Redis</argument>
        <argument key="doctrine_cache.redis.host">localhost</argument>
        <argument key="doctrine_cache.redis.port">6379</argument>
        <argument key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</argument>
        <argument key="doctrine_cache.riak.bucket.class">Riak\Bucket</argument>
        <argument key="doctrine_cache.riak.connection.class">Riak\Connection</argument>
        <argument key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</argument>
        <argument key="doctrine_cache.riak.host">localhost</argument>
        <argument key="doctrine_cache.riak.port">8087</argument>
        <argument key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</argument>
        <argument key="doctrine_cache.sqlite3.connection.class">SQLite3</argument>
        <argument key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</argument>
        <argument key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</argument>
        <argument key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</argument>
        <argument key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</argument>
        <argument key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</argument>
        <argument key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</argument>
        <argument key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</argument>
        <argument key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</argument>
        <argument key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</argument>
        <argument key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</argument>
        <argument key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</argument>
        <argument key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</argument>
        <argument key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</argument>
        <argument key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</argument>
        <argument key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</argument>
        <argument key="doctrine.entity_managers" type="collection">
          <argument key="default">doctrine.orm.default_entity_manager</argument>
        </argument>
        <argument key="doctrine.default_entity_manager">default</argument>
        <argument key="doctrine.dbal.connection_factory.types" type="collection">
          <argument key="json" type="collection">
            <argument key="class">Sonata\Doctrine\Types\JsonType</argument>
            <argument key="commented">true</argument>
          </argument>
        </argument>
        <argument key="doctrine.connections" type="collection">
          <argument key="default">doctrine.dbal.default_connection</argument>
        </argument>
        <argument key="doctrine.default_connection">default</argument>
        <argument key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</argument>
        <argument key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</argument>
        <argument key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</argument>
        <argument key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</argument>
        <argument key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</argument>
        <argument key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</argument>
        <argument key="doctrine.orm.cache.memcache_host">localhost</argument>
        <argument key="doctrine.orm.cache.memcache_port">11211</argument>
        <argument key="doctrine.orm.cache.memcache_instance.class">Memcache</argument>
        <argument key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</argument>
        <argument key="doctrine.orm.cache.memcached_host">localhost</argument>
        <argument key="doctrine.orm.cache.memcached_port">11211</argument>
        <argument key="doctrine.orm.cache.memcached_instance.class">Memcached</argument>
        <argument key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</argument>
        <argument key="doctrine.orm.cache.redis_host">localhost</argument>
        <argument key="doctrine.orm.cache.redis_port">6379</argument>
        <argument key="doctrine.orm.cache.redis_instance.class">Redis</argument>
        <argument key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</argument>
        <argument key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</argument>
        <argument key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</argument>
        <argument key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</argument>
        <argument key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</argument>
        <argument key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</argument>
        <argument key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</argument>
        <argument key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</argument>
        <argument key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</argument>
        <argument key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</argument>
        <argument key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
        <argument key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</argument>
        <argument key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</argument>
        <argument key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</argument>
        <argument key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</argument>
        <argument key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</argument>
        <argument key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</argument>
        <argument key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</argument>
        <argument key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</argument>
        <argument key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</argument>
        <argument key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</argument>
        <argument key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</argument>
        <argument key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</argument>
        <argument key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</argument>
        <argument key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</argument>
        <argument key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</argument>
        <argument key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</argument>
        <argument key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</argument>
        <argument key="doctrine.orm.auto_generate_proxy_classes">true</argument>
        <argument key="doctrine.orm.proxy_dir">/var/www/html/bio/var/cache/dev/doctrine/orm/Proxies</argument>
        <argument key="doctrine.orm.proxy_namespace">Proxies</argument>
        <argument key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</argument>
        <argument key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
        <argument key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</argument>
        <argument key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</argument>
        <argument key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</argument>
        <argument key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</argument>
        <argument key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</argument>
        <argument key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</argument>
        <argument key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</argument>
        <argument key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
        <argument key="stof_doctrine_extensions.event_listener.locale.class">Stof\DoctrineExtensionsBundle\EventListener\LocaleListener</argument>
        <argument key="stof_doctrine_extensions.event_listener.logger.class">Stof\DoctrineExtensionsBundle\EventListener\LoggerListener</argument>
        <argument key="stof_doctrine_extensions.event_listener.blame.class">Stof\DoctrineExtensionsBundle\EventListener\BlameListener</argument>
        <argument key="stof_doctrine_extensions.uploadable.manager.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadableManager</argument>
        <argument key="stof_doctrine_extensions.uploadable.mime_type_guesser.class">Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter</argument>
        <argument key="stof_doctrine_extensions.uploadable.default_file_info.class">Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo</argument>
        <argument key="stof_doctrine_extensions.default_locale">fr</argument>
        <argument key="stof_doctrine_extensions.default_file_path">null</argument>
        <argument key="stof_doctrine_extensions.translation_fallback">false</argument>
        <argument key="stof_doctrine_extensions.persist_default_translation">false</argument>
        <argument key="stof_doctrine_extensions.skip_translation_on_load">false</argument>
        <argument key="stof_doctrine_extensions.uploadable.validate_writable_directory">true</argument>
        <argument key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</argument>
        <argument key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</argument>
        <argument key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</argument>
        <argument key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</argument>
        <argument key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</argument>
        <argument key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</argument>
        <argument key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</argument>
        <argument key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</argument>
        <argument key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</argument>
        <argument key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</argument>
        <argument key="lexik_maintenance.listener.class">Lexik\Bundle\MaintenanceBundle\Listener\MaintenanceListener</argument>
        <argument key="lexik_maintenance.driver_factory.class">Lexik\Bundle\MaintenanceBundle\Drivers\DriverFactory</argument>
        <argument key="lexik_maintenance.driver.database.class">Lexik\Bundle\MaintenanceBundle\Drivers\DatabaseDriver</argument>
        <argument key="lexik_maintenance.driver" type="collection">
          <argument key="class">\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver</argument>
          <argument key="options" type="collection">
            <argument key="file_path">/var/www/html/bio/app/cache/lock</argument>
          </argument>
          <argument key="ttl">null</argument>
        </argument>
        <argument key="lexik_maintenance.authorized.path">null</argument>
        <argument key="lexik_maintenance.authorized.host">null</argument>
        <argument key="lexik_maintenance.authorized.ips">null</argument>
        <argument key="lexik_maintenance.authorized.query" type="collection"/>
        <argument key="lexik_maintenance.authorized.cookie" type="collection"/>
        <argument key="lexik_maintenance.authorized.route">null</argument>
        <argument key="lexik_maintenance.authorized.attributes" type="collection"/>
        <argument key="lexik_maintenance.response.http_code">503</argument>
        <argument key="lexik_maintenance.response.http_status">Service Temporarily Unavailable</argument>
        <argument key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</argument>
        <argument key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</argument>
        <argument key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</argument>
        <argument key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</argument>
        <argument key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</argument>
        <argument key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</argument>
        <argument key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</argument>
        <argument key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</argument>
        <argument key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</argument>
        <argument key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</argument>
        <argument key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</argument>
        <argument key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</argument>
        <argument key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</argument>
        <argument key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</argument>
        <argument key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</argument>
        <argument key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</argument>
        <argument key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</argument>
        <argument key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</argument>
        <argument key="jms_serializer.serializer.class">JMS\Serializer\Serializer</argument>
        <argument key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</argument>
        <argument key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</argument>
        <argument key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</argument>
        <argument key="jms_serializer.json_serialization_visitor.options">0</argument>
        <argument key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</argument>
        <argument key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</argument>
        <argument key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</argument>
        <argument key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
        <argument key="jms_serializer.xml_serialization_visitor.format_output">true</argument>
        <argument key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</argument>
        <argument key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</argument>
        <argument key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</argument>
        <argument key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</argument>
        <argument key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</argument>
        <argument key="jms_serializer.form_error_handler.class">FOS\RestBundle\Serializer\Normalizer\FormErrorHandler</argument>
        <argument key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</argument>
        <argument key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</argument>
        <argument key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</argument>
        <argument key="jms_serializer.context_factory.serialization.class">JMS\Serializer\ContextFactory\DefaultSerializationContextFactory</argument>
        <argument key="jms_serializer.context_factory.deserialization.class">JMS\Serializer\ContextFactory\DefaultDeserializationContextFactory</argument>
        <argument key="jms_serializer.expression_evaluator.class">JMS\Serializer\Expression\ExpressionEvaluator</argument>
        <argument key="jms_serializer.expression_language.class">Symfony\Component\ExpressionLanguage\ExpressionLanguage</argument>
        <argument key="jms_serializer.expression_language.function_provider.class">JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider</argument>
        <argument key="jms_serializer.accessor_strategy.default.class">JMS\Serializer\Accessor\DefaultAccessorStrategy</argument>
        <argument key="jms_serializer.accessor_strategy.expression.class">JMS\Serializer\Accessor\ExpressionAccessorStrategy</argument>
        <argument key="knp_menu.factory.class">Knp\Menu\MenuFactory</argument>
        <argument key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</argument>
        <argument key="knp_menu.helper.class">Knp\Menu\Twig\Helper</argument>
        <argument key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</argument>
        <argument key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</argument>
        <argument key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</argument>
        <argument key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</argument>
        <argument key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</argument>
        <argument key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</argument>
        <argument key="knp_menu.renderer.list.options" type="collection"/>
        <argument key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</argument>
        <argument key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</argument>
        <argument key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</argument>
        <argument key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</argument>
        <argument key="knp_menu.renderer.twig.options" type="collection"/>
        <argument key="knp_menu.renderer.twig.template">KnpMenuBundle::menu.html.twig</argument>
        <argument key="knp_menu.default_renderer">twig</argument>
        <argument key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</argument>
        <argument key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</argument>
        <argument key="sonata.core.form_type">standard</argument>
        <argument key="sonata.core.form.mapping.type" type="collection"/>
        <argument key="sonata.core.form.mapping.extension" type="collection"/>
        <argument key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</argument>
        <argument key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</argument>
        <argument key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</argument>
        <argument key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</argument>
        <argument key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</argument>
        <argument key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</argument>
        <argument key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</argument>
        <argument key="sonata.block.container.types" type="collection">
          <argument>sonata.block.service.container</argument>
          <argument>sonata.page.block.container</argument>
          <argument>sonata.dashboard.block.container</argument>
          <argument>cmf.block.container</argument>
          <argument>cmf.block.slideshow</argument>
        </argument>
        <argument key="sonata_block.blocks" type="collection">
          <argument key="sonata.admin.block.admin_list" type="collection">
            <argument key="contexts" type="collection">
              <argument>admin</argument>
            </argument>
            <argument key="templates" type="collection"/>
            <argument key="cache">sonata.cache.noop</argument>
            <argument key="settings" type="collection"/>
          </argument>
        </argument>
        <argument key="sonata_block.blocks_by_class" type="collection"/>
        <argument key="sonata_block.cache_blocks" type="collection">
          <argument key="by_type" type="collection">
            <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          </argument>
        </argument>
        <argument key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</argument>
        <argument key="sonata_doctrine_orm_admin.entity_manager">null</argument>
        <argument key="sonata_doctrine_orm_admin.templates" type="collection">
          <argument key="types" type="collection">
            <argument key="list" type="collection">
              <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
              <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
              <argument key="date">SonataIntlBundle:CRUD:list_date.html.twig</argument>
              <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
              <argument key="datetime">SonataIntlBundle:CRUD:list_datetime.html.twig</argument>
              <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
              <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
              <argument key="email">SonataAdminBundle:CRUD:list_email.html.twig</argument>
              <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
              <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
              <argument key="smallint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
              <argument key="bigint">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
              <argument key="integer">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
              <argument key="decimal">SonataIntlBundle:CRUD:list_decimal.html.twig</argument>
              <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
              <argument key="currency">SonataIntlBundle:CRUD:list_currency.html.twig</argument>
              <argument key="percent">SonataIntlBundle:CRUD:list_percent.html.twig</argument>
              <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
              <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
              <argument key="html">SonataAdminBundle:CRUD:list_html.html.twig</argument>
            </argument>
            <argument key="show" type="collection">
              <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
              <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
              <argument key="date">SonataIntlBundle:CRUD:show_date.html.twig</argument>
              <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
              <argument key="datetime">SonataIntlBundle:CRUD:show_datetime.html.twig</argument>
              <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
              <argument key="email">SonataAdminBundle:CRUD:show_email.html.twig</argument>
              <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
              <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
              <argument key="smallint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
              <argument key="bigint">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
              <argument key="integer">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
              <argument key="decimal">SonataIntlBundle:CRUD:show_decimal.html.twig</argument>
              <argument key="currency">SonataIntlBundle:CRUD:show_currency.html.twig</argument>
              <argument key="percent">SonataIntlBundle:CRUD:show_percent.html.twig</argument>
              <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
              <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
              <argument key="html">SonataAdminBundle:CRUD:show_html.html.twig</argument>
            </argument>
          </argument>
          <argument key="form" type="collection">
            <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
          </argument>
          <argument key="filter" type="collection">
            <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
          </argument>
        </argument>
        <argument key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
          <argument key="choice">select</argument>
          <argument key="boolean">select</argument>
          <argument key="text">text</argument>
          <argument key="textarea">textarea</argument>
          <argument key="html">textarea</argument>
          <argument key="email">email</argument>
          <argument key="string">text</argument>
          <argument key="smallint">text</argument>
          <argument key="bigint">text</argument>
          <argument key="integer">number</argument>
          <argument key="decimal">number</argument>
          <argument key="currency">number</argument>
          <argument key="percent">number</argument>
          <argument key="url">url</argument>
          <argument key="date">date</argument>
        </argument>
        <argument key="sonata.admin.configuration.templates" type="collection">
          <argument key="history_revision_timestamp">SonataIntlBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="user_block">:Block:user_block.html.twig</argument>
          <argument key="layout">:Admin:layout_form.html.twig</argument>
          <argument key="outer_list_rows_tree">RedCodeTreeBundle:CRUD:tree.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
        <argument key="sonata.admin.configuration.admin_services" type="collection"/>
        <argument key="sonata.admin.configuration.dashboard_groups" type="collection">
          <argument key="app.admin.group.media" type="collection">
            <argument key="label">Media</argument>
            <argument key="icon">&lt;i class="fa fa-camera-retro"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.media.admin.media</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="app.admin.group.news" type="collection">
            <argument key="label">News</argument>
            <argument key="icon">&lt;i class="fa fa-newspaper-o"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.news</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="app.admin.group.faq" type="collection">
            <argument key="label">Faq</argument>
            <argument key="icon">&lt;i class="fa fa-question-circle"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.faq</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="app.admin.group.pharmacien" type="collection">
            <argument key="label">Pharmacien</argument>
            <argument key="icon">&lt;i class="fa fa-universal-access"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">admin.pharmacien</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
        </argument>
        <argument key="sonata.admin.configuration.dashboard_blocks" type="collection">
          <argument type="collection">
            <argument key="position">left</argument>
            <argument key="settings" type="collection"/>
            <argument key="type">sonata.admin.block.admin_list</argument>
            <argument key="roles" type="collection"/>
          </argument>
        </argument>
        <argument key="sonata.admin.configuration.sort_admins">false</argument>
        <argument key="sonata.admin.configuration.breadcrumbs" type="collection">
          <argument key="child_admin_route">edit</argument>
        </argument>
        <argument key="sonata.admin.security.acl_user_manager">fos_user.user_manager</argument>
        <argument key="sonata.admin.configuration.security.information" type="collection"/>
        <argument key="sonata.admin.configuration.security.admin_permissions" type="collection">
          <argument>CREATE</argument>
          <argument>LIST</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>EXPORT</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
        </argument>
        <argument key="sonata.admin.configuration.security.object_permissions" type="collection">
          <argument>VIEW</argument>
          <argument>EDIT</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
          <argument>OWNER</argument>
        </argument>
        <argument key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</argument>
        <argument key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</argument>
        <argument key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</argument>
        <argument key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
        <argument key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</argument>
        <argument key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</argument>
        <argument key="sonata.admin.extension.map" type="collection">
          <argument key="admins" type="collection"/>
          <argument key="excludes" type="collection"/>
          <argument key="implements" type="collection"/>
          <argument key="extends" type="collection"/>
          <argument key="instanceof" type="collection"/>
          <argument key="uses" type="collection"/>
        </argument>
        <argument key="sonata.admin.configuration.filters.persist">false</argument>
        <argument key="sonata.admin.configuration.show.mosaic.button">true</argument>
        <argument key="sonata.intl.locale_detector.request.class">Sonata\IntlBundle\Locale\RequestDetector</argument>
        <argument key="sonata.intl.locale_detector.session.class">Sonata\IntlBundle\Locale\SessionDetector</argument>
        <argument key="sonata.intl.templating.helper.locale.class">Sonata\IntlBundle\Templating\Helper\LocaleHelper</argument>
        <argument key="sonata.intl.templating.helper.number.class">Sonata\IntlBundle\Templating\Helper\NumberHelper</argument>
        <argument key="sonata.intl.templating.helper.datetime.class">Sonata\IntlBundle\Templating\Helper\DateTimeHelper</argument>
        <argument key="sonata.intl.timezone_detector.chain.class">Sonata\IntlBundle\Timezone\ChainTimezoneDetector</argument>
        <argument key="sonata.intl.timezone_detector.user.class">Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector</argument>
        <argument key="sonata.intl.timezone_detector.locale.class">Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector</argument>
        <argument key="sonata.intl.twig.helper.locale.class">Sonata\IntlBundle\Twig\Extension\LocaleExtension</argument>
        <argument key="sonata.intl.twig.helper.number.class">Sonata\IntlBundle\Twig\Extension\NumberExtension</argument>
        <argument key="sonata.intl.twig.helper.datetime.class">Sonata\IntlBundle\Twig\Extension\DateTimeExtension</argument>
        <argument key="sonata_intl.timezone.detectors" type="collection">
          <argument>sonata.intl.timezone_detector.locale</argument>
        </argument>
        <argument key="sonata.classification.manager.category.class">Sonata\ClassificationBundle\Entity\CategoryManager</argument>
        <argument key="sonata.classification.manager.tag.class">Sonata\ClassificationBundle\Entity\TagManager</argument>
        <argument key="sonata.classification.manager.collection.class">Sonata\ClassificationBundle\Entity\CollectionManager</argument>
        <argument key="sonata.classification.manager.context.class">Sonata\ClassificationBundle\Entity\ContextManager</argument>
        <argument key="sonata.classification.admin.groupname">sonata_classification</argument>
        <argument key="sonata.classification.admin.groupicon">&lt;i class='fa fa-tags'&gt;&lt;/i&gt;</argument>
        <argument key="sonata.classification.admin.tag.entity">AppBundle\Entity\Classification\Tag</argument>
        <argument key="sonata.classification.admin.category.entity">AppBundle\Entity\Classification\Category</argument>
        <argument key="sonata.classification.admin.collection.entity">AppBundle\Entity\Classification\Collection</argument>
        <argument key="sonata.classification.admin.context.entity">AppBundle\Entity\Classification\Context</argument>
        <argument key="sonata.classification.manager.tag.entity">AppBundle\Entity\Classification\Tag</argument>
        <argument key="sonata.classification.manager.category.entity">AppBundle\Entity\Classification\Category</argument>
        <argument key="sonata.classification.manager.collection.entity">AppBundle\Entity\Classification\Collection</argument>
        <argument key="sonata.classification.manager.context.entity">AppBundle\Entity\Classification\Context</argument>
        <argument key="sonata.classification.admin.category.class">Sonata\ClassificationBundle\Admin\CategoryAdmin</argument>
        <argument key="sonata.classification.admin.category.controller">SonataClassificationBundle:CategoryAdmin</argument>
        <argument key="sonata.classification.admin.category.translation_domain">SonataClassificationBundle</argument>
        <argument key="sonata.classification.admin.tag.class">Sonata\ClassificationBundle\Admin\TagAdmin</argument>
        <argument key="sonata.classification.admin.tag.controller">SonataAdminBundle:CRUD</argument>
        <argument key="sonata.classification.admin.tag.translation_domain">SonataClassificationBundle</argument>
        <argument key="sonata.classification.admin.collection.class">Sonata\ClassificationBundle\Admin\CollectionAdmin</argument>
        <argument key="sonata.classification.admin.collection.controller">SonataAdminBundle:CRUD</argument>
        <argument key="sonata.classification.admin.collection.translation_domain">SonataClassificationBundle</argument>
        <argument key="sonata.classification.admin.context.class">Sonata\ClassificationBundle\Admin\ContextAdmin</argument>
        <argument key="sonata.classification.admin.context.controller">SonataAdminBundle:CRUD</argument>
        <argument key="sonata.classification.admin.context.translation_domain">SonataClassificationBundle</argument>
        <argument key="sonata.media.provider.image.class">Sonata\MediaBundle\Provider\ImageProvider</argument>
        <argument key="sonata.media.provider.file.class">Sonata\MediaBundle\Provider\FileProvider</argument>
        <argument key="sonata.media.provider.youtube.class">Sonata\MediaBundle\Provider\YouTubeProvider</argument>
        <argument key="sonata.media.provider.dailymotion.class">Sonata\MediaBundle\Provider\DailyMotionProvider</argument>
        <argument key="sonata.media.provider.vimeo.class">Sonata\MediaBundle\Provider\VimeoProvider</argument>
        <argument key="sonata.media.thumbnail.format">Sonata\MediaBundle\Thumbnail\FormatThumbnail</argument>
        <argument key="sonata.media.thumbnail.format.default">jpg</argument>
        <argument key="sonata.media.thumbnail.liip_imagine">Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail</argument>
        <argument key="sonata.media.pool.class">Sonata\MediaBundle\Provider\Pool</argument>
        <argument key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Resizer\SimpleResizer</argument>
        <argument key="sonata.media.resizer.square.class">Sonata\MediaBundle\Resizer\SquareResizer</argument>
        <argument key="sonata.media.adapter.image.gd.class">Imagine\Gd\Imagine</argument>
        <argument key="sonata.media.adapter.image.imagick.class">Imagine\Imagick\Imagine</argument>
        <argument key="sonata.media.adapter.image.gmagick.class">Imagine\Gmagick\Imagine</argument>
        <argument key="sonata.media.metadata.proxy.class">Sonata\MediaBundle\Metadata\ProxyMetadataBuilder</argument>
        <argument key="sonata.media.metadata.amazon.class">Sonata\MediaBundle\Metadata\AmazonMetadataBuilder</argument>
        <argument key="sonata.media.metadata.noop.class">Sonata\MediaBundle\Metadata\NoopMetadataBuilder</argument>
        <argument key="sonata.media.adapater.filesystem.opencloud.class"></argument>
        <argument key="sonata.media.block.media.class">Sonata\MediaBundle\Block\MediaBlockService</argument>
        <argument key="sonata.media.block.feature_media.class">Sonata\MediaBundle\Block\FeatureMediaBlockService</argument>
        <argument key="sonata.media.block.gallery.class">Sonata\MediaBundle\Block\GalleryBlockService</argument>
        <argument key="sonata.media.block.gallery_list.class">Sonata\MediaBundle\Block\GalleryListBlockService</argument>
        <argument key="sonata.media.manager.media.class">Sonata\MediaBundle\Entity\MediaManager</argument>
        <argument key="sonata.media.manager.gallery.class">Sonata\MediaBundle\Entity\GalleryManager</argument>
        <argument key="sonata.media.admin.groupname">sonata_media</argument>
        <argument key="sonata.media.admin.groupicon">&lt;i class='fa fa-image'&gt;&lt;/i&gt;</argument>
        <argument key="sonata.media.admin.media.class">Sonata\MediaBundle\Admin\ORM\MediaAdmin</argument>
        <argument key="sonata.media.admin.media.controller">SonataMediaBundle:MediaAdmin</argument>
        <argument key="sonata.media.admin.media.translation_domain">SonataMediaBundle</argument>
        <argument key="sonata.media.admin.gallery.class">Sonata\MediaBundle\Admin\GalleryAdmin</argument>
        <argument key="sonata.media.admin.gallery.controller">SonataMediaBundle:GalleryAdmin</argument>
        <argument key="sonata.media.admin.gallery.translation_domain">SonataMediaBundle</argument>
        <argument key="sonata.media.admin.gallery_has_media.class">Sonata\MediaBundle\Admin\GalleryHasMediaAdmin</argument>
        <argument key="sonata.media.admin.gallery_has_media.controller">SonataAdminBundle:CRUD</argument>
        <argument key="sonata.media.admin.gallery_has_media.translation_domain">SonataMediaBundle</argument>
        <argument key="sonata.media.admin_format" type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
        <argument key="sonata.media.resizer.simple.adapter.mode">inset</argument>
        <argument key="sonata.media.resizer.square.adapter.mode">inset</argument>
        <argument key="sonata.media.admin.media.entity">AppBundle\Entity\Media\Media</argument>
        <argument key="sonata.media.admin.gallery.entity">AppBundle\Entity\Media\Gallery</argument>
        <argument key="sonata.media.admin.gallery_has_media.entity">AppBundle\Entity\Media\GalleryHasMedia</argument>
        <argument key="sonata.media.media.class">AppBundle\Entity\Media\Media</argument>
        <argument key="sonata.media.gallery.class">AppBundle\Entity\Media\Gallery</argument>
        <argument key="fos_user.backend_type_orm">true</argument>
        <argument key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</argument>
        <argument key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</argument>
        <argument key="fos_user.resetting.email.template">@FOSUser/Email/resetting_email.txt.twig</argument>
        <argument key="fos_user.registration.confirmation.template">@FOSUser/Registration/email.txt.twig</argument>
        <argument key="fos_user.storage">orm</argument>
        <argument key="fos_user.firewall_name">main</argument>
        <argument key="fos_user.model_manager_name">null</argument>
        <argument key="fos_user.model.user.class">AppBundle\Entity\User</argument>
        <argument key="fos_user.profile.form.type">FOS\UserBundle\Form\Type\ProfileFormType</argument>
        <argument key="fos_user.profile.form.name">fos_user_profile_form</argument>
        <argument key="fos_user.profile.form.validation_groups" type="collection">
          <argument>Profile</argument>
          <argument>Default</argument>
        </argument>
        <argument key="fos_user.registration.confirmation.from_email" type="collection">
          <argument key="noreply@proconnect.com">Biogaran Pro Connect</argument>
        </argument>
        <argument key="fos_user.registration.confirmation.enabled">false</argument>
        <argument key="fos_user.registration.form.type">AppBundle\Form\RegistrationType</argument>
        <argument key="fos_user.registration.form.validation_groups" type="collection">
          <argument>AppRegistration</argument>
        </argument>
        <argument key="fos_user.registration.form.name">fos_user_registration_form</argument>
        <argument key="fos_user.change_password.form.type">FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
        <argument key="fos_user.change_password.form.name">fos_user_change_password_form</argument>
        <argument key="fos_user.change_password.form.validation_groups" type="collection">
          <argument>ChangePassword</argument>
          <argument>Default</argument>
        </argument>
        <argument key="fos_user.resetting.email.from_email" type="collection">
          <argument key="noreply@proconnect.com">Biogaran Pro Connect</argument>
        </argument>
        <argument key="fos_user.resetting.retry_ttl">false</argument>
        <argument key="fos_user.resetting.token_ttl">86400</argument>
        <argument key="fos_user.resetting.form.validation_groups" type="collection">
          <argument>AppResetting</argument>
        </argument>
        <argument key="fos_user.resetting.form.type">FOS\UserBundle\Form\Type\ResettingFormType</argument>
        <argument key="fos_user.resetting.form.name">fos_user_resetting_form</argument>
        <argument key="templating.helper.markdown.class">Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper</argument>
        <argument key="sonata.formatter.text.markdown.class">Sonata\FormatterBundle\Formatter\MarkdownFormatter</argument>
        <argument key="sonata.formatter.text.text.class">Sonata\FormatterBundle\Formatter\TextFormatter</argument>
        <argument key="sonata.formatter.text.raw.class">Sonata\FormatterBundle\Formatter\RawFormatter</argument>
        <argument key="sonata.formatter.text.twigengine.class">Sonata\FormatterBundle\Formatter\TwigFormatter</argument>
        <argument key="sonata.formatter.block.formatter.class">Sonata\FormatterBundle\Block\FormatterBlockService</argument>
        <argument key="sonata.formatter.ckeditor.extension.class">Sonata\FormatterBundle\Admin\CkeditorAdminExtension</argument>
        <argument key="sonata.formatter.ckeditor.configuration.templates" type="collection">
          <argument key="browser">SonataFormatterBundle:Ckeditor:browser.html.twig</argument>
          <argument key="upload">SonataFormatterBundle:Ckeditor:upload.html.twig</argument>
        </argument>
        <argument key="guzzle.http_client.class">GuzzleHttp\Client</argument>
        <argument key="guzzle.middleware.class">GuzzleHttp\Middleware</argument>
        <argument key="guzzle.formatter.class">GuzzleHttp\MessageFormatter</argument>
        <argument key="guzzle_bundle.data_collector.class">EightPoints\Bundle\GuzzleBundle\DataCollector\HttpDataCollector</argument>
        <argument key="guzzle_bundle.logger.class">EightPoints\Bundle\GuzzleBundle\Log\Logger</argument>
        <argument key="guzzle_bundle.middleware.log.class">EightPoints\Bundle\GuzzleBundle\Middleware\LogMiddleware</argument>
        <argument key="guzzle_bundle.middleware.event_dispatcher.class">EightPoints\Bundle\GuzzleBundle\Middleware\EventDispatchMiddleware</argument>
        <argument key="guzzle.plugin.header.headers" type="collection"/>
        <argument key="guzzle_bundle.middleware.wsse.class">EightPoints\Guzzle\WsseAuthMiddleware</argument>
        <argument key="guzzle.plugin.wsse.username"></argument>
        <argument key="guzzle.plugin.wsse.password"></argument>
        <argument key="fos_rest.format_listener.rules" type="collection">
          <argument type="collection">
            <argument key="priorities" type="collection">
              <argument>json</argument>
            </argument>
            <argument key="fallback_format">json</argument>
            <argument key="path">null</argument>
            <argument key="host">null</argument>
            <argument key="methods">null</argument>
            <argument key="attributes" type="collection"/>
            <argument key="stop">false</argument>
            <argument key="prefer_extension">true</argument>
          </argument>
        </argument>
        <argument key="nelmio_api_doc.motd.template">NelmioApiDocBundle::Components/motd.html.twig</argument>
        <argument key="nelmio_api_doc.exclude_sections" type="collection"/>
        <argument key="nelmio_api_doc.default_sections_opened">true</argument>
        <argument key="nelmio_api_doc.api_name">Biogaran Pro API Documentation</argument>
        <argument key="nelmio_api_doc.sandbox.enabled">true</argument>
        <argument key="nelmio_api_doc.sandbox.endpoint">null</argument>
        <argument key="nelmio_api_doc.sandbox.accept_type">application/json</argument>
        <argument key="nelmio_api_doc.sandbox.body_format.formats" type="collection"/>
        <argument key="nelmio_api_doc.sandbox.body_format.default_format">json</argument>
        <argument key="nelmio_api_doc.sandbox.request_format.method">accept_header</argument>
        <argument key="nelmio_api_doc.sandbox.request_format.default_format">json</argument>
        <argument key="nelmio_api_doc.sandbox.request_format.formats" type="collection"/>
        <argument key="nelmio_api_doc.sandbox.entity_to_choice">true</argument>
        <argument key="nelmio_api_doc.formatter.abstract_formatter.class">Nelmio\ApiDocBundle\Formatter\AbstractFormatter</argument>
        <argument key="nelmio_api_doc.formatter.markdown_formatter.class">Nelmio\ApiDocBundle\Formatter\MarkdownFormatter</argument>
        <argument key="nelmio_api_doc.formatter.simple_formatter.class">Nelmio\ApiDocBundle\Formatter\SimpleFormatter</argument>
        <argument key="nelmio_api_doc.formatter.html_formatter.class">Nelmio\ApiDocBundle\Formatter\HtmlFormatter</argument>
        <argument key="nelmio_api_doc.formatter.swagger_formatter.class">Nelmio\ApiDocBundle\Formatter\SwaggerFormatter</argument>
        <argument key="nelmio_api_doc.sandbox.authentication">null</argument>
        <argument key="nelmio_api_doc.extractor.api_doc_extractor.class">Nelmio\ApiDocBundle\Extractor\ApiDocExtractor</argument>
        <argument key="nelmio_api_doc.form.extension.description_form_type_extension.class">Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension</argument>
        <argument key="nelmio_api_doc.twig.extension.extra_markdown.class">Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension</argument>
        <argument key="nelmio_api_doc.doc_comment_extractor.class">Nelmio\ApiDocBundle\Util\DocCommentExtractor</argument>
        <argument key="nelmio_api_doc.extractor.handler.fos_rest.class">Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler</argument>
        <argument key="nelmio_api_doc.extractor.handler.jms_security.class">Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler</argument>
        <argument key="nelmio_api_doc.extractor.handler.sensio_framework_extra.class">Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler</argument>
        <argument key="nelmio_api_doc.extractor.handler.phpdoc.class">Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler</argument>
        <argument key="nelmio_api_doc.parser.collection_parser.class">Nelmio\ApiDocBundle\Parser\CollectionParser</argument>
        <argument key="nelmio_api_doc.parser.form_errors_parser.class">Nelmio\ApiDocBundle\Parser\FormErrorsParser</argument>
        <argument key="nelmio_api_doc.parser.json_serializable_parser.class">Nelmio\ApiDocBundle\Parser\JsonSerializableParser</argument>
        <argument key="nelmio_api_doc.request_listener.parameter">_doc</argument>
        <argument key="nelmio_api_doc.event_listener.request.class">Nelmio\ApiDocBundle\EventListener\RequestListener</argument>
        <argument key="nelmio_api_doc.parser.validation_parser.class">Nelmio\ApiDocBundle\Parser\ValidationParserLegacy</argument>
        <argument key="nelmio_api_doc.swagger.base_path">/api</argument>
        <argument key="nelmio_api_doc.swagger.swagger_version">1.2</argument>
        <argument key="nelmio_api_doc.swagger.api_version">0.1</argument>
        <argument key="nelmio_api_doc.swagger.info" type="collection">
          <argument key="title">Symfony2</argument>
          <argument key="description">My awesome Symfony2 app!</argument>
          <argument key="TermsOfServiceUrl">null</argument>
          <argument key="contact">null</argument>
          <argument key="license">null</argument>
          <argument key="licenseUrl">null</argument>
        </argument>
        <argument key="nelmio_api_doc.swagger.model_naming_strategy">dot_notation</argument>
        <argument key="ewz_recaptcha.public_key">6LdnMxgUAAAAAHjG60oxrfd9K2Y61w3DrZ994LPV</argument>
        <argument key="ewz_recaptcha.private_key">6LdnMxgUAAAAAPL-nDs2NmwRQAyJe0mofm9wG_ER</argument>
        <argument key="ewz_recaptcha.enabled">true</argument>
        <argument key="ewz_recaptcha.verify_host">false</argument>
        <argument key="ewz_recaptcha.ajax">false</argument>
        <argument key="ewz_recaptcha.locale_key">fr</argument>
        <argument key="ewz_recaptcha.locale_from_request">false</argument>
        <argument key="ewz_recaptcha.http_proxy" type="collection">
          <argument key="host">null</argument>
          <argument key="port">null</argument>
          <argument key="auth">null</argument>
        </argument>
        <argument key="web_profiler.debug_toolbar.position">bottom</argument>
        <argument key="web_profiler.debug_toolbar.intercept_redirects">false</argument>
        <argument key="web_profiler.debug_toolbar.mode">2</argument>
        <argument key="hautelook_alice.locale">fr_FR</argument>
        <argument key="hautelook_alice.loading_limit">10</argument>
        <argument key="hautelook_alice.db_drivers" type="collection">
          <argument key="orm">null</argument>
          <argument key="mongodb">null</argument>
          <argument key="phpcr">null</argument>
        </argument>
        <argument key="hautelook_alice.seed">1</argument>
        <argument key="hautelook_alice.persist_once">false</argument>
      </argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="hautelook_alice.fixtures.loader" class="Hautelook\AliceBundle\Alice\DataFixtures\Loader">
      <argument type="service" id="hautelook_alice.alice.fixtures.loader"/>
      <argument type="service" id="hautelook_alice.alice.processor_chain"/>
      <argument>false</argument>
      <argument>10</argument>
    </service>
    <service id="hautelook_alice.bundle_resolver" class="Hautelook\AliceBundle\Resolver\BundlesResolver"/>
    <service id="hautelook_alice.doctrine.command_factory" class="Hautelook\AliceBundle\Doctrine\Command\CommandFactory" lazy="true"/>
    <service id="hautelook_alice.doctrine.orm.fixtures_finder" class="Hautelook\AliceBundle\Doctrine\Finder\FixturesFinder">
      <argument>DataFixtures/ORM</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="hautelook_alice.doctrine.orm.loader_generator" class="Hautelook\AliceBundle\Doctrine\Generator\LoaderGenerator">
      <argument type="service" id="hautelook_alice.doctrine.orm.fixtures_finder"/>
    </service>
    <service id="hautelook_alice.doctrine.command.deprecated_load_command" class="Hautelook\AliceBundle\Doctrine\Command\LoadDataFixturesCommand">
      <tag name="console.command"/>
      <argument>hautelook_alice:fixtures:load</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="hautelook_alice.fixtures.loader"/>
      <argument type="service" id="hautelook_alice.alice.fixtures.loader"/>
      <argument type="service" id="hautelook_alice.doctrine.orm.fixtures_finder"/>
      <argument type="service" id="hautelook_alice.bundle_resolver"/>
      <argument type="service" id="hautelook_alice.doctrine.orm.loader_generator"/>
      <argument type="service" id="hautelook_alice.doctrine.executor.fixtures_executor"/>
      <factory service="hautelook_alice.doctrine.command_factory" method="createCommand"/>
    </service>
    <service id="hautelook_alice.doctrine.command.load_command" class="Hautelook\AliceBundle\Doctrine\Command\LoadDataFixturesCommand">
      <tag name="console.command"/>
      <argument>hautelook_alice:doctrine:fixtures:load</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="hautelook_alice.fixtures.loader"/>
      <argument type="service" id="hautelook_alice.alice.fixtures.loader"/>
      <argument type="service" id="hautelook_alice.doctrine.orm.fixtures_finder"/>
      <argument type="service" id="hautelook_alice.bundle_resolver"/>
      <argument type="service" id="hautelook_alice.doctrine.orm.loader_generator"/>
      <argument type="service" id="hautelook_alice.doctrine.executor.fixtures_executor"/>
      <factory service="hautelook_alice.doctrine.command_factory" method="createCommand"/>
    </service>
    <service id="liip_functional_test.exception_listener" class="Liip\FunctionalTestBundle\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="liip_functional_test.query.counter" class="Liip\FunctionalTestBundle\QueryCounter">
      <argument>null</argument>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="liip_functional_test.validator" class="Liip\FunctionalTestBundle\Validator\DataCollectingValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
          <factory service="validator.builder" method="getValidator"/>
        </service>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.import" class="Symfony\Bridge\Monolog\Logger">
      <argument>import</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.app_main_log"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.app_main_log"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="form.extension" class="Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="AppBundle\Form\RegistrationType">app.form.resetting</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType">sonata.core.form.type.array</argument>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType">sonata.core.form.type.boolean</argument>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType">sonata.core.form.type.collection</argument>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">sonata.core.form.type.translatable_choice</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType">sonata.core.form.type.date_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType">sonata.core.form.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType">sonata.core.form.type.date_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType">sonata.core.form.type.datetime_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType">sonata.core.form.type.date_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType">sonata.core.form.type.equal</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType">sonata.core.form.type.color_selector</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType">sonata.block.form.type.block</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType">sonata.block.form.type.container_template</argument>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType">sonata.admin.form.type.admin</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType">sonata.admin.form.type.model_choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelTypeList">sonata.admin.form.type.model_list</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType">sonata.admin.form.type.model_reference</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType">sonata.admin.form.type.model_hidden</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType">sonata.admin.form.type.collection</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">sonata.admin.doctrine_orm.form.type.choice_field_mask</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType">sonata.admin.form.filter.type.number</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">sonata.admin.form.filter.type.choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType">sonata.admin.form.filter.type.default</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType">sonata.admin.form.filter.type.date</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">sonata.admin.form.filter.type.daterange</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">sonata.admin.form.filter.type.datetime</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\CategorySelectorType">sonata.classification.form.type.category_selector</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiCategoryType">sonata.classification.api.form.type.category</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiCollectionType">sonata.classification.api.form.type.collection</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiTagType">sonata.classification.api.form.type.tag</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiContextType">sonata.classification.api.form.type.context</argument>
        <argument key="Sonata\MediaBundle\Form\Type\MediaType">sonata.media.form.type.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType">sonata.media.api.form.type.doctrine.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiMediaType">sonata.media.api.form.type.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiGalleryType">sonata.media.api.form.type.gallery</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType">sonata.media.api.form.type.gallery_has_media</argument>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
        <argument key="Ivory\CKEditorBundle\Form\Type\CKEditorType">ivory_ck_editor.form.type</argument>
        <argument key="Sonata\FormatterBundle\Form\Type\FormatterType">sonata.formatter.form.type.selector</argument>
        <argument key="Sonata\FormatterBundle\Form\Type\SimpleFormatterType">sonata.formatter.form.type.simple</argument>
        <argument key="EWZ\Bundle\RecaptchaBundle\Form\Type\EWZRecaptchaType">ewz_recaptcha.form.type</argument>
      </argument>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.upload.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>sonata.admin.form.extension.field.mopa</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument>form.type_guesser.validator</argument>
        <argument>form.type_guesser.doctrine</argument>
      </argument>
      <argument type="collection">
        <argument key="form">Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument key="birthday">Symfony\Component\Form\Extension\Core\Type\BirthdayType</argument>
        <argument key="checkbox">Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument key="choice">Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument key="collection">Symfony\Component\Form\Extension\Core\Type\CollectionType</argument>
        <argument key="country">Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument key="date">Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument key="datetime">Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument key="email">Symfony\Component\Form\Extension\Core\Type\EmailType</argument>
        <argument key="file">Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument key="hidden">Symfony\Component\Form\Extension\Core\Type\HiddenType</argument>
        <argument key="integer">Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
        <argument key="language">Symfony\Component\Form\Extension\Core\Type\LanguageType</argument>
        <argument key="locale">Symfony\Component\Form\Extension\Core\Type\LocaleType</argument>
        <argument key="money">Symfony\Component\Form\Extension\Core\Type\MoneyType</argument>
        <argument key="number">Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument key="password">Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument key="percent">Symfony\Component\Form\Extension\Core\Type\PercentType</argument>
        <argument key="radio">Symfony\Component\Form\Extension\Core\Type\RadioType</argument>
        <argument key="repeated">Symfony\Component\Form\Extension\Core\Type\RepeatedType</argument>
        <argument key="search">Symfony\Component\Form\Extension\Core\Type\SearchType</argument>
        <argument key="textarea">Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
        <argument key="text">Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument key="time">Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument key="timezone">Symfony\Component\Form\Extension\Core\Type\TimezoneType</argument>
        <argument key="url">Symfony\Component\Form\Extension\Core\Type\UrlType</argument>
        <argument key="button">Symfony\Component\Form\Extension\Core\Type\ButtonType</argument>
        <argument key="submit">Symfony\Component\Form\Extension\Core\Type\SubmitType</argument>
        <argument key="reset">Symfony\Component\Form\Extension\Core\Type\ResetType</argument>
        <argument key="currency">Symfony\Component\Form\Extension\Core\Type\CurrencyType</argument>
        <argument key="entity">Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument key="sonata_type_immutable_array">Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument key="sonata_type_boolean">Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument key="sonata_type_collection">Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_translatable_choice">Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument key="sonata_type_date_range">Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument key="sonata_type_datetime_range">Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument key="sonata_type_date_picker">Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument key="sonata_type_datetime_picker">Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument key="sonata_type_date_range_picker">Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument key="sonata_type_datetime_range_picker">Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument key="sonata_type_equal">Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument key="sonata_type_color_selector">Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
        <argument key="sonata_block_service_choice">Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument key="sonata_type_container_template_choice">Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument key="sonata_type_admin">Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument key="sonata_type_model">Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument key="sonata_type_model_list">Sonata\AdminBundle\Form\Type\ModelTypeList</argument>
        <argument key="sonata_type_model_reference">Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument key="sonata_type_model_hidden">Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument key="sonata_type_model_autocomplete">Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument key="sonata_type_native_collection">Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_choice_field_mask">Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument key="sonata_type_filter_number">Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument key="sonata_type_filter_choice">Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument key="sonata_type_filter_default">Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument key="sonata_type_filter_date">Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument key="sonata_type_filter_date_range">Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument key="sonata_type_filter_datetime">Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument key="sonata_type_filter_datetime_range">Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
        <argument key="tab">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</argument>
        <argument key="sonata_classification_api_form_category">Sonata\ClassificationBundle\Form\Type\ApiCategoryType</argument>
        <argument key="sonata_classification_api_form_collection">Sonata\ClassificationBundle\Form\Type\ApiCollectionType</argument>
        <argument key="sonata_classification_api_form_tag">Sonata\ClassificationBundle\Form\Type\ApiTagType</argument>
        <argument key="sonata_classification_api_form_context">Sonata\ClassificationBundle\Form\Type\ApiContextType</argument>
        <argument key="sonata_category_selector">Sonata\ClassificationBundle\Form\Type\CategorySelectorType</argument>
        <argument key="sonata_media_type">Sonata\MediaBundle\Form\Type\MediaType</argument>
        <argument key="sonata_media_api_form_media">Sonata\MediaBundle\Form\Type\ApiMediaType</argument>
        <argument key="sonata_media_api_form_doctrine_media">Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType</argument>
        <argument key="sonata_media_api_form_gallery">Sonata\MediaBundle\Form\Type\ApiGalleryType</argument>
        <argument key="sonata_media_api_form_gallery_has_media">Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType</argument>
        <argument key="ckeditor">Ivory\CKEditorBundle\Form\Type\CKEditorType</argument>
        <argument key="sonata_formatter_type">Sonata\FormatterBundle\Form\Type\FormatterType</argument>
        <argument key="sonata_simple_formatter_type">Sonata\FormatterBundle\Form\Type\SimpleFormatterType</argument>
      </argument>
      <argument type="collection">
        <argument key="form" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
        </argument>
        <argument key="repeated" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="submit" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="choice" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
        <argument key="button" type="collection">
          <argument>mopa_bootstrap.form.type_extension.button</argument>
        </argument>
        <argument key="date" type="collection">
          <argument>mopa_bootstrap.form.type_extension.date</argument>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="nelmio_api_doc.parser.form_type_parser" class="Nelmio\ApiDocBundle\Parser\FormTypeParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="form.factory"/>
      <argument>true</argument>
    </service>
    <service id="nelmio_api_doc.parser.validation_parser" class="Nelmio\ApiDocBundle\Parser\ValidationParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="liip_functional_test.validator"/>
    </service>
    <service id="nelmio_api_doc.parser.jms_metadata_parser" class="Nelmio\ApiDocBundle\Parser\JmsMetadataParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/var/www/html/bio/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
      <argument>/var/www/html/bio/app/../var/sessions/dev</argument>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\TwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
      <autowiring-type>Symfony\Component\Templating\EngineInterface</autowiring-type>
      <autowiring-type>Symfony\Bundle\FrameworkBundle\Templating\EngineInterface</autowiring-type>
    </service>
    <service id="translator" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service">
        <service class="Symfony\Component\Translation\LoggingTranslator" public="false">
          <tag name="monolog.logger" channel="translation"/>
          <argument type="service" id="translator.default"/>
          <argument type="service" id="monolog.logger.translation"/>
        </service>
      </argument>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/var/www/html/bio/app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/html/bio/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\CachedReader">
      <tag name="annotations.cached_reader" provider="annotations.cache"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\DoctrineProvider" public="false">
          <argument type="service">
            <service class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
              <argument>/var/www/html/bio/var/cache/dev/annotations.php</argument>
              <argument type="service" id="cache.annotations"/>
              <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
            </service>
          </argument>
        </service>
      </argument>
      <argument>true</argument>
      <autowiring-type>Doctrine\Common\Annotations\Reader</autowiring-type>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="FOS\UserBundle\Model\UserInterface" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.password_encoder" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <autowiring-type>Psr\Log\LoggerInterface</autowiring-type>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.spool" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.real" class="Swift_Transport_EsmtpTransport">
      <argument type="service">
        <service class="Swift_Transport_StreamBuffer" public="false">
          <argument type="service">
            <service class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
          </argument>
        </service>
      </argument>
      <argument type="collection">
        <argument type="service">
          <service class="Swift_Transport_Esmtp_AuthHandler" public="false">
            <argument type="collection">
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
              </argument>
              <argument type="service">
                <service class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
              </argument>
            </argument>
            <call method="setUsername">
              <argument>null</argument>
            </call>
            <call method="setPassword">
              <argument>null</argument>
            </call>
            <call method="setAuthMode">
              <argument>null</argument>
            </call>
          </service>
        </argument>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>127.0.0.1</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
          <argument>null</argument>
          <argument type="service" id="router.request_context" on-invalid="null"/>
        </service>
      </configurator>
    </service>
    <service id="jms_serializer.metadata_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service">
        <service class="Metadata\Driver\DriverChain" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/html/bio/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/html/bio/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/html/bio/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/html/bio/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Stof\DoctrineExtensionsBundle">/var/www/html/bio/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\MaintenanceBundle">/var/www/html/bio/vendor/lexik/maintenance-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/html/bio/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/html/bio/vendor/knplabs/knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/html/bio/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/html/bio/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ClassificationBundle">/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/html/bio/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/config/serializer</argument>
                      <argument key="Shapecode\Bundle\CronBundle">/var/www/html/bio/vendor/shapecode/cron-bundle/src/Resources/config/serializer</argument>
                      <argument key="AppBundle">/var/www/html/bio/src/AppBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/html/bio/vendor/knplabs/knp-markdown-bundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/html/bio/vendor/egeloen/ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="RedCode\TreeBundle">/var/www/html/bio/vendor/redcode/tree-bundle/RedCode/TreeBundle/Resources/config/serializer</argument>
                      <argument key="EightPoints\Bundle\GuzzleBundle">/var/www/html/bio/vendor/eightpoints/guzzle-bundle/EightPoints/Bundle/GuzzleBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/html/bio/vendor/friendsofsymfony/rest-bundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/html/bio/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="EWZ\Bundle\RecaptchaBundle">/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/html/bio/vendor/sensio/distribution-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/html/bio/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="Hautelook\AliceBundle">/var/www/html/bio/vendor/hautelook/alice-bundle/src/Resources/config/serializer</argument>
                      <argument key="Liip\FunctionalTestBundle">/var/www/html/bio/vendor/liip/functional-test-bundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/html/bio/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/html/bio/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/html/bio/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/html/bio/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Stof\DoctrineExtensionsBundle">/var/www/html/bio/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\MaintenanceBundle">/var/www/html/bio/vendor/lexik/maintenance-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/html/bio/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/html/bio/vendor/knplabs/knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/html/bio/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/html/bio/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ClassificationBundle">/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/html/bio/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/config/serializer</argument>
                      <argument key="Shapecode\Bundle\CronBundle">/var/www/html/bio/vendor/shapecode/cron-bundle/src/Resources/config/serializer</argument>
                      <argument key="AppBundle">/var/www/html/bio/src/AppBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/html/bio/vendor/knplabs/knp-markdown-bundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/html/bio/vendor/egeloen/ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="RedCode\TreeBundle">/var/www/html/bio/vendor/redcode/tree-bundle/RedCode/TreeBundle/Resources/config/serializer</argument>
                      <argument key="EightPoints\Bundle\GuzzleBundle">/var/www/html/bio/vendor/eightpoints/guzzle-bundle/EightPoints/Bundle/GuzzleBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/html/bio/vendor/friendsofsymfony/rest-bundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/html/bio/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="EWZ\Bundle\RecaptchaBundle">/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/html/bio/vendor/sensio/distribution-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/html/bio/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="Hautelook\AliceBundle">/var/www/html/bio/vendor/hautelook/alice-bundle/src/Resources/config/serializer</argument>
                      <argument key="Liip\FunctionalTestBundle">/var/www/html/bio/vendor/liip/functional-test-bundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Symfony\Bundle\FrameworkBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/var/www/html/bio/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/var/www/html/bio/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/var/www/html/bio/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/var/www/html/bio/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Stof\DoctrineExtensionsBundle">/var/www/html/bio/vendor/stof/doctrine-extensions-bundle/Resources/config/serializer</argument>
                      <argument key="Lexik\Bundle\MaintenanceBundle">/var/www/html/bio/vendor/lexik/maintenance-bundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/var/www/html/bio/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MenuBundle">/var/www/html/bio/vendor/knplabs/knp-menu-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\CoreBundle">/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\BlockBundle">/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\DoctrineORMAdminBundle">/var/www/html/bio/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\AdminBundle">/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\IntlBundle">/var/www/html/bio/vendor/sonata-project/intl-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\ClassificationBundle">/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\MediaBundle">/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\EasyExtendsBundle">/var/www/html/bio/vendor/sonata-project/easy-extends-bundle/Resources/config/serializer</argument>
                      <argument key="FOS\UserBundle">/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/config/serializer</argument>
                      <argument key="Shapecode\Bundle\CronBundle">/var/www/html/bio/vendor/shapecode/cron-bundle/src/Resources/config/serializer</argument>
                      <argument key="AppBundle">/var/www/html/bio/src/AppBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\MarkdownBundle">/var/www/html/bio/vendor/knplabs/knp-markdown-bundle/Resources/config/serializer</argument>
                      <argument key="Ivory\CKEditorBundle">/var/www/html/bio/vendor/egeloen/ckeditor-bundle/Resources/config/serializer</argument>
                      <argument key="Sonata\FormatterBundle">/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/config/serializer</argument>
                      <argument key="RedCode\TreeBundle">/var/www/html/bio/vendor/redcode/tree-bundle/RedCode/TreeBundle/Resources/config/serializer</argument>
                      <argument key="EightPoints\Bundle\GuzzleBundle">/var/www/html/bio/vendor/eightpoints/guzzle-bundle/EightPoints/Bundle/GuzzleBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/var/www/html/bio/vendor/friendsofsymfony/rest-bundle/Resources/config/serializer</argument>
                      <argument key="Nelmio\ApiDocBundle">/var/www/html/bio/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/config/serializer</argument>
                      <argument key="EWZ\Bundle\RecaptchaBundle">/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\DebugBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/var/www/html/bio/vendor/sensio/distribution-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/var/www/html/bio/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="Hautelook\AliceBundle">/var/www/html/bio/vendor/hautelook/alice-bundle/src/Resources/config/serializer</argument>
                      <argument key="Liip\FunctionalTestBundle">/var/www/html/bio/vendor/liip/functional-test-bundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy">
      <argument type="service">
        <service class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
          <argument type="service">
            <service class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
              <argument>_</argument>
              <argument>true</argument>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_serializer.object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer" class="JMS\Serializer\Serializer">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
            <argument key="yml" type="service" id="jms_serializer.yaml_serialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
          <call method="setListeners">
            <argument type="collection">
              <argument key="serializer.pre_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
              <argument key="serializer.post_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPostSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
            </argument>
          </call>
        </service>
      </argument>
      <argument>null</argument>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <call method="setSerializationContextFactory">
        <argument type="service" id="jms_serializer.serialization_context_factory"/>
      </call>
      <call method="setDeserializationContextFactory">
        <argument type="service" id="jms_serializer.deserialization_context_factory"/>
      </call>
    </service>
    <service id="jms_serializer.accessor_strategy" class="JMS\Serializer\Accessor\ExpressionAccessorStrategy">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service">
        <service class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false"/>
      </argument>
    </service>
    <service id="sonata.admin.security.handler" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler"/>
    <service id="fos_user.mailer" class="FOS\UserBundle\Mailer\TwigSwiftMailer">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="template" type="collection">
          <argument key="confirmation">@FOSUser/Registration/email.txt.twig</argument>
          <argument key="resetting">@FOSUser/Email/resetting_email.txt.twig</argument>
        </argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="noreply@proconnect.com">Biogaran Pro Connect</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="noreply@proconnect.com">Biogaran Pro Connect</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.util.email_canonicalizer" class="FOS\UserBundle\Util\Canonicalizer"/>
    <service id="fos_user.util.token_generator" class="FOS\UserBundle\Util\TokenGenerator"/>
    <service id="markdown.parser" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Max">
      <tag name="markdown.parser" alias="max"/>
    </service>
    <service id="fos_rest.view_handler" class="FOS\RestBundle\View\ViewHandler">
      <argument type="service" id="router"/>
      <argument type="service" id="fos_rest.serializer"/>
      <argument type="service" id="templating"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setSerializeNullStrategy">
        <argument>true</argument>
      </call>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>/var/www/html/bio</argument>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/app/Resources/TwigBundle/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/knplabs/knp-menu-bundle/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/doctrine-orm-admin-bundle/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/intl-bundle/Resources/views</argument>
        <argument>SonataIntl</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/classification-bundle/Resources/views</argument>
        <argument>SonataClassification</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/media-bundle/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/app/Resources/FOSUserBundle/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/friendsofsymfony/user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/egeloen/ckeditor-bundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/sonata-project/formatter-bundle/Resources/views</argument>
        <argument>SonataFormatter</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/app/Resources/RedCodeTreeBundle/views</argument>
        <argument>RedCodeTree</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/redcode/tree-bundle/RedCode/TreeBundle/Resources/views</argument>
        <argument>RedCodeTree</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/eightpoints/guzzle-bundle/EightPoints/Bundle/GuzzleBundle/Resources/views</argument>
        <argument>Guzzle</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/nelmio/api-doc-bundle/Nelmio/ApiDocBundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/excelwebzone/recaptcha-bundle/src/Resources/views</argument>
        <argument>EWZRecaptcha</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/liip/functional-test-bundle/Resources/views</argument>
        <argument>LiipFunctionalTest</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/bio/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views</argument>
      </call>
    </service>
    <service id="knp_menu.menu_provider" class="Knp\Menu\Provider\ChainProvider">
      <argument type="collection">
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="sonata_admin_sidebar">sonata.admin.sidebar_menu</argument>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Knp\Bundle\MenuBundle\Provider\BuilderServiceProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="main" type="collection">
                <argument>app.menu_builder</argument>
                <argument>createMainMenu</argument>
              </argument>
              <argument key="nridInterlocuteur" type="collection">
                <argument>app.menu_builder</argument>
                <argument>createPharmacienMenu</argument>
              </argument>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Sonata\AdminBundle\Menu\Provider\GroupMenuProvider" public="false">
            <tag name="knp_menu.provider"/>
            <argument type="service" id="knp_menu.factory"/>
            <argument type="service" id="sonata.admin.pool"/>
            <argument type="service" id="security.authorization_checker"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.serializer" class="FOS\RestBundle\Serializer\JMSSerializerAdapter" lazy="true">
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="fos_rest.serializer.jms_handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="2" type="collection">
          <argument key="NRIDOfficine" type="collection">
            <argument key="json" type="collection">
              <argument>officine_serializer_handler</argument>
              <argument>deserializeOfficineFromJson</argument>
            </argument>
          </argument>
          <argument key="NRIDPharmacien" type="collection">
            <argument key="json" type="collection">
              <argument>pharmacien_serializer_handler</argument>
              <argument>deserializePharmacienFromJson</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromyml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_category_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_collection_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_tag_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_context_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
        </argument>
        <argument key="1" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_category_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_collection_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_tag_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_context_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="Exception" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="cache.app_clearer" alias="cache.default_clearer"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.real"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="serializer" alias="jms_serializer"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="sonata.intl.timezone_detector" alias="sonata.intl.timezone_detector.chain"/>
    <service id="sonata.intl.locale_detector" alias="sonata.intl.locale_detector.request_stack"/>
    <service id="sonata.media.manager.category" alias="sonata.media.manager.category.default"/>
    <service id="sonata.media.adapter.image.default" alias="sonata.media.adapter.image.gd"/>
    <service id="sonata.media.resizer.default" alias="sonata.media.resizer.simple"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.email_canonicalizer"/>
    <service id="fos_user.user_manager" alias="app.manager.user"/>
    <service id="fos_rest.inflector" alias="app.util.inflector.noop"/>
    <service id="fos_rest.router" alias="router"/>
    <service id="fos_rest.templating" alias="templating"/>
    <service id="console.command.sensiolabs_security_command_securitycheckercommand" alias="sensio_distribution.security_checker.command"/>
    <service id="console.command.hautelook_alicebundle_doctrine_command_loaddatafixturescommand" alias="hautelook_alice.doctrine.command.load_command"/>
    <service id="validator" alias="liip_functional_test.validator"/>
  </services>
</container>
